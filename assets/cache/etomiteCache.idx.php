<?php
$this->config['zend_urls']='1';
$this->config['settings_version']='1.1';
$this->config['date_format']='%Y-%m-%d';
$this->config['time_format']='%I:%M %p';
$this->config['server_offset_time']='0';
$this->config['server_protocol']='http';
$this->config['manager_language']='english';
$this->config['etomite_charset']='iso-8859-1';
$this->config['site_name']='My Site';
$this->config['site_start']='1';
$this->config['error_page']='11';
$this->config['site_status']='1';
$this->config['site_unavailable_message']='The site is currently unavailable';
$this->config['track_visitors']='1';
$this->config['resolve_hostnames']='1';
$this->config['top_howmany']='10';
$this->config['default_template']='1';
$this->config['publish_default']='1';
$this->config['search_default']='1';
$this->config['cache_default']='1';
$this->config['syncsitecheck_default']='1';
$this->config['showinmenu_default']='1';
$this->config['friendly_urls']='1';
$this->config['friendly_url_prefix']='';
$this->config['friendly_url_suffix']='.html';
$this->config['friendly_alias_urls']='1';
$this->config['use_udperms']='1';
$this->config['use_uvperms']='0';
$this->config['access_denied_message']='';
$this->config['udperms_allowroot']='0';
$this->config['use_mgr_logging']='0';
$this->config['max_attempts']='3';
$this->config['use_captcha']='0';
$this->config['captcha_words']='Array,BitCode,Chunk,Document,Etomite,Forum,Index,Javascript,Keyword,MySQL,Parser,Query,Random,Snippet,Template,Website';
$this->config['signupemail_message']='Hi! 

Here are your login details for Etomite:

Username: %s
Password: %s

Once you log into Etomite, you can change your password.

Regards,
The Management';
$this->config['emailsender']='john@jc-websolutions.com';
$this->config['emailsubject']='Your Etomite login details';
$this->config['number_of_logs']='100';
$this->config['number_of_messages']='100';
$this->config['show_doc_data_preview']='1';
$this->config['use_doc_editor']='1';
$this->config['which_editor']='1';
$this->config['xSkin']='';
$this->config['xLang']='en';
$this->config['strict_editor']='1';
$this->config['strip_base_href']='1';
$this->config['cm_plugin']='0';
$this->config['to_plugin']='0';
$this->config['xp__svn']='0';
$this->config['xp_FullPage']='0';
$this->config['xp_PasteText']='0';
$this->config['xp_Abbreviation']='0';
$this->config['xp_GenericPlugin']='0';
$this->config['xp_PersistentStorage']='0';
$this->config['xp_CSS']='0';
$this->config['xp_GetHtml']='0';
$this->config['xp_PreserveScripts']='0';
$this->config['xp_CSSPicker']='0';
$this->config['xp_HtmlEntities']='0';
$this->config['xp_QuickTag']='0';
$this->config['xp_CharCounter']='0';
$this->config['xp_InsertNote']='0';
$this->config['xp_SaveOnBlur']='0';
$this->config['xp_CharacterMap']='0';
$this->config['xp_InsertPagebreak']='0';
$this->config['xp_SaveSubmit']='0';
$this->config['xp_ContextMenu']='0';
$this->config['xp_InsertSmiley']='0';
$this->config['xp_SetId']='0';
$this->config['xp_DefinitionList']='0';
$this->config['xp_InsertSnippet']='0';
$this->config['xp_SmartReplace']='0';
$this->config['xp_DoubleClick']='0';
$this->config['xp_InsertSnippet2']='0';
$this->config['xp_SpellChecker']='0';
$this->config['xp_DynamicCSS']='0';
$this->config['xp_InsertWords']='0';
$this->config['xp_SuperClean']='0';
$this->config['xp_EditTag']='0';
$this->config['xp_LangMarks']='0';
$this->config['xp_TableOperations']='0';
$this->config['xp_Equation']='0';
$this->config['xp_ListType']='0';
$this->config['xp_UnFormat']='0';
$this->config['xp_ExtendedFileManager']='0';
$this->config['xp_MootoolsFileManager']='0';
$this->config['xp_UnsavedChanges']='0';
$this->config['xp_FindReplace']='0';
$this->config['xp_PSFixed']='0';
$this->config['xp_WysiwygWrap']='0';
$this->config['xp_FormOperations']='0';
$this->config['xp_PSLocal']='0';
$this->config['xp_Forms']='0';
$this->config['xp_PSServer']='0';
$this->config['xp_Stylist']='0';
$this->config['xp_Stylist_path']='http://etofork.jc-websolutions.com/assets/site/example.css';
$this->config['im_plugin']='1';
$this->config['im_plugin_base_dir']='';
$this->config['im_plugin_base_url']='http://etofork.jc-websolutions.com/assets/images/';
$this->config['fm_plugin']='1';
$this->config['fm_plugin_base_url']='http://etofork.jc-websolutions.com';
$this->config['fm_plugin_document_url']='http://etofork.jc-websolutions.com/assets/documents';
$this->config['fm_path']='/assets/documents';
$this->config['fm_exclude']='.,..,cgi-bin,aspnet_client,index.php,index.html';
$this->config['fm_upload_files']='jpg,gif,png,ico,txt,php,html,htm,xml,js,css,cache,zip,gz,rar,z,tgz,tar,htaccess,bmp,mp3,wav,au,wmv,avi,mpg,mpeg,pdf,psd';
$this->config['tiny_css_path']='';
$this->config['tiny_css_selectors']='';
$this->config['use_code_editor']='1';
$this->config['code_highlight']='1';
$this->config['dumpSQL']='0';
$this->config['dumpSnippets']='0';
$this->config['allow_embedded_php']='0';
$this->config['strip_image_paths']='0';
$this->config['filemanager_path']='';
$this->config['upload_files']='jpg,gif,png,ico,txt,php,html,htm,xml,js,css,cache,zip,gz,rar,z,tgz,tar,htaccess,bmp,mp3,wav,au,wmv,avi,mpg,mpeg,pdf,psd';
$this->config['inlineview_files']='txt,php,html,htm,xml,js,css';
$this->config['view_files']='jpg,gif,png,ico';
$this->config['edit_files']='txt,php,html,htm,xml,js,css';
$this->config['exclude_paths']='.,..,cgi-bin,manager';
$this->config['maxuploadsize']='';
$this->config['useNotice']='1';
$this->config['manager_layout']='1';
$this->documentListing['test-doc'] = 10;
$this->aliasListing[]=array('id'=>10,'alias'=>'test-doc','template'=>1,'parent'=>0,'authenticate'=>0);
$this->documentListing['http404'] = 11;
$this->aliasListing[]=array('id'=>11,'alias'=>'http404','template'=>1,'parent'=>2,'authenticate'=>0);
$this->documentListing['new-page'] = 8;
$this->aliasListing[]=array('id'=>8,'alias'=>'new-page','template'=>1,'parent'=>0,'authenticate'=>0);
$this->aliasListing[]=array('id'=>2,'alias'=>'','template'=>1,'parent'=>0,'authenticate'=>0);
$this->documentListing['test-page'] = 5;
$this->aliasListing[]=array('id'=>5,'alias'=>'test-page','template'=>1,'parent'=>0,'authenticate'=>0);
$this->documentListing['weblink'] = 7;
$this->aliasListing[]=array('id'=>7,'alias'=>'weblink','template'=>0,'parent'=>0,'authenticate'=>0);
$this->documentListing['index'] = 1;
$this->aliasListing[]=array('id'=>1,'alias'=>'index','template'=>1,'parent'=>0,'authenticate'=>0);
$this->aliasListing[]=array('id'=>9,'alias'=>'','template'=>1,'parent'=>2,'authenticate'=>0);
$this->contentTypes[10]='text/html';
$this->contentTypes[11]='text/html';
$this->contentTypes[8]='text/plain';
$this->contentTypes[2]='text/html';
$this->contentTypes[5]='text/html';
$this->contentTypes[7]='text/html';
$this->contentTypes[1]='text/html';
$this->contentTypes[9]='text/html';
$this->tpl_list[]=1;
$this->tpl_list[]=2;
$this->tpl_list[]=3;
$this->chunkCache['W3C Validation']='PHAgY2xhc3M9InRleHRjZW50ZXIiPg0KICAgIDxhIGhyZWY9Imh0dHA6Ly92YWxpZGF0b3IudzMub3JnL2NoZWNrP3VyaT1yZWZlcmVyIg0KICAgICAgICBvbmNsaWNrPSJ3aW5kb3cub3BlbignaHR0cDovL3ZhbGlkYXRvci53My5vcmcvY2hlY2s/dXJpPXJlZmVyZXInKTsgcmV0dXJuIGZhbHNlOyI+PGltZw0KICAgICAgICBzcmM9Imh0dHA6Ly93d3cudzMub3JnL0ljb25zL3ZhbGlkLXhodG1sMTAiDQogICAgICAgIGFsdD0iVmFsaWQgWEhUTUwgMS4wIFN0cmljdCIgaGVpZ2h0PSIzMSIgd2lkdGg9Ijg4IiAvPg0KICAgIDwvYT4NCiAgICA8YSBocmVmPSJodHRwOi8vamlnc2F3LnczLm9yZy9jc3MtdmFsaWRhdG9yL2NoZWNrL3JlZmVyZXIiDQogICAgICAgIG9uY2xpY2s9IndpbmRvdy5vcGVuKCdodHRwOi8vamlnc2F3LnczLm9yZy9jc3MtdmFsaWRhdG9yL2NoZWNrL3JlZmVyZXInKTsgcmV0dXJuIGZhbHNlOyI+DQogICAgICAgIDxpbWcgc3R5bGU9ImJvcmRlcjowO3dpZHRoOjg4cHg7aGVpZ2h0OjMxcHgiDQogICAgICAgICAgICBzcmM9Imh0dHA6Ly9qaWdzYXcudzMub3JnL2Nzcy12YWxpZGF0b3IvaW1hZ2VzL3Zjc3MiDQogICAgICAgICAgICBhbHQ9IlZhbGlkIENTUyEiIC8+DQogICAgPC9hPg0KPC9wPg==';
$this->chunkCache['Javascript Example']='PHNwYW4gaWQ9IkpTRXhhbXBsZSI+PC9zcGFuPg0KDQo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+DQo8IS0tDQogIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdKU0V4YW1wbGUnKS5pbm5lckhUTUwgPSAiWypkZXNjcmlwdGlvbipdIjsNCi8vLS0+DQo8L3NjcmlwdD4NCg==';
$this->chunkCache['FixInertTags']='PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPg0KPCEtLQ0KDQpmdW5jdGlvbiBGaXhJbmVydFRhZ3ModCkNCnsNCiAgLyoNCiAgQ3JlYXRlZDogMjAwOC0wNC0xOCBieSBSYWxwaCBBLiBEYWhsZ3Jlbg0KICBQdXJwb3NlOiBUaGlzIGZ1bmN0aW9uIGNvbnZlcnRzIGluZXJ0IHRhZ3MsIGNvbnRhaW5pbmcgdW4tbmF0dXJhbCBzcGFjZXMsDQogIHdoaWNoIGhhdmUgYmVlbiBlbnRlcmVkIGZvciBkZW1vbnN0YXRpb24gcHVycG9zZXMsIGludG8gbmF0dXJhbCBsb29raW5nDQogIGluZXJ0IHRhZ3MgYnkgdXNpbmcgYSBibGFuayBpbWFnZS4NCiAgKi8NCiAgDQogIC8vIGNoZWNrIHRvIHNlZSBpZiBhbiBlbGVtZW50IGlkIHdhcyBzZW50DQogIGlmKHQgIT0gbnVsbCkNCiAgew0KICAgIC8vIGlmIGFuIGlkIHdhcyBzZW50LCB1c2UgdGhhdCBlbGVtZW50DQogICAgdmFyIGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0KTsNCiAgfQ0KICBlbHNlDQogIHsNCiAgICAvLyBpZiBubyBpZCB3YXMgc2VudCwgdXNlIHRoZSBib2R5IGVsZW1lbnQNCiAgICB2YXIgZSA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdib2R5JylbMF07DQogIH0NCg0KICAvLyBmZXRjaCB0aGUgZWxlbWVudCBjb250ZW50cw0KICB2YXIgcyA9IGUuaW5uZXJIVE1MOw0KDQogIC8vIGRlZmluZSB0aGUgYmxhbmsgaW1hZ2UgdG8gdXNlLCB3aXRoIHdpZHRoIGFuZCBoZWlnaHQgc2V0IHRvIHplcm8NCiAgdmFyIGIgPSAnPGltZyBzcmM9Im1hbmFnZXIvbWVkaWEvaW1hZ2VzL2JsYW5rLnBuZyIgc3R5bGU9IndpZHRoOjA7IGhlaWdodDowOyIgYWx0PSJibGFuayIvPic7DQoNCiAgLy8gcGVyZm9ybSBzZXF1ZW50aWFsIHJlcGxhY2VtZW50cw0KICBzID0gcy5yZXBsYWNlKC9cWyBcIS9nLCAnWycrYisnIScpOw0KICBzID0gcy5yZXBsYWNlKC9cISBcXS9nLCAnIScrYisnXScpOw0KICBzID0gcy5yZXBsYWNlKC9cWyBcWy9nLCAnWycrYisnWycpOw0KICBzID0gcy5yZXBsYWNlKC9cXSBcXS9nLCAnXScrYisnXScpOw0KICBzID0gcy5yZXBsYWNlKC9ceyBcey9nLCAneycrYisneycpOw0KICBzID0gcy5yZXBsYWNlKC9cfSBcfS9nLCAnfScrYisnfScpOw0KICBzID0gcy5yZXBsYWNlKC9cWyBcKi9nLCAnWycrYisnKicpOw0KICBzID0gcy5yZXBsYWNlKC9cKiBcXS9nLCAnKicrYisnXScpOw0KICBzID0gcy5yZXBsYWNlKC9cWyBcKC9nLCAnWycrYisnKCcpOw0KICBzID0gcy5yZXBsYWNlKC9cKSBcXS9nLCAnKScrYisnXScpOw0KICBzID0gcy5yZXBsYWNlKC9cWyBcfi9nLCAnWycrYisnficpOw0KICBzID0gcy5yZXBsYWNlKC9cfiBcXS9nLCAnficrYisnXScpOw0KICBzID0gcy5yZXBsYWNlKC9ceyBcIS9nLCAneycrYisnIScpOw0KICBzID0gcy5yZXBsYWNlKC9cISBcfS9nLCAnIScrYisnfScpOw0KICBzID0gcy5yZXBsYWNlKC9cWyBcXi9nLCAnWycrYisnXicpOw0KICBzID0gcy5yZXBsYWNlKC9cXiBcXS9nLCAnXicrYisnXScpOw0KDQogIC8vIHdyaXRlIG1vZGlmaWVkIGNvbnRlbnRzIGJhY2sgdG8gZWxlbWVudA0KICBlLmlubmVySFRNTCA9IHM7DQp9DQoNCi8vIGNhbGwgdGhlIGZpeEluZXJ0VGFncyBmdW5jdGlvbg0KRml4SW5lcnRUYWdzKCk7DQoNCi8vLS0+DQo8L3NjcmlwdD4=';
$this->chunkCache['registration_form']='';
$this->chunkCache['jquery_head']='PHNjcmlwdCBsYW5ndWFnZT0iamF2YXNjcmlwdCIgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii9qcy9qcXVlcnktMS4zLjIubWluLmpzIj48L3NjcmlwdD4NCjxzY3JpcHQgbGFuZ3VhZ2U9ImphdmFzY3JpcHQiIHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvanMvbmV3X3VwZGF0ZS9qcXVlcnkuZmxvdy4xLjIuYXV0by5qcyI+PC9zY3JpcHQ+DQo8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii9zdHlsZS5jc3MiIHR5cGU9InRleHQvY3NzIiBtZWRpYT0ic2NyZWVuIiAvPg0KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPg0KJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKXsNCgkkKCIjbXlDb250cm9sbGVyIikuakZsb3coew0KCQlzbGlkZXM6ICIjc2xpZGVzIiwNCgkJY29udHJvbGxlcjogIi5qRmxvd0NvbnRyb2wiLCAvLyBtdXN0IGJlIGNsYXNzLCB1c2UgLiBzaWduDQoJCXNsaWRlV3JhcHBlciA6ICIjakZsb3dTbGlkZSIsIC8vIG11c3QgYmUgaWQsIHVzZSAjIHNpZ24NCgkJc2VsZWN0ZWRXcmFwcGVyOiAiakZsb3dTZWxlY3RlZCIsICAvLyBqdXN0IHB1cmUgdGV4dCwgbm8gc2lnbg0KCQlhdXRvOiB0cnVlLAkJLy9hdXRvIGNoYW5nZSBzbGlkZSwgZGVmYXVsdCB0cnVlDQoJCXdpZHRoOiAiMjA3cHgiLA0KCQloZWlnaHQ6ICIzMDBweCIsDQoJCWR1cmF0aW9uOiA4MDAsDQoJCXByZXY6ICIuakZsb3dQcmV2IiwgLy8gbXVzdCBiZSBjbGFzcywgdXNlIC4gc2lnbg0KCQluZXh0OiAiLmpGbG93TmV4dCIsIC8vIG11c3QgYmUgY2xhc3MsIHVzZSAuIHNpZ24NCgkJZmFkZTogdHJ1ZSwNCgkJdGh1bWJzOiBmYWxzZQ0KCX0pOw0KfSk7DQo8L3NjcmlwdD4=';
$this->chunkCache['831_slider']='PGRpdiBjbGFzcz0iamZsb3ctY29udGVudC1zbGlkZXJ7YkN9Ij4NCgk8ZGl2IGlkPSJzbGlkZXN7YkN9Ij4NCgkJe3NsaWRlT3V0fQ0KCQkNCgk8L2Rpdj4NCgkJDQoJPGRpdiBpZD0ibXlDb250cm9sbGVye2JDfSI+DQoJCTxzcGFuIGNsYXNzPSJqRmxvd1ByZXZ7YkN9Ij5QcmV2PC9zcGFuPg0KCQl7c2xpZGVOYXZ9DQoJCTxzcGFuIGNsYXNzPSJqRmxvd05leHR7YkN9Ij5OZXh0PC9zcGFuPg0KCTwvZGl2Pg0KCTxkaXYgY2xhc3M9ImNsZWFyIj48L2Rpdj4NCjwvZGl2Pg==';
$this->chunkCache['fancy_uploader']='';
$this->chunkCache['831_lightbox_js']='PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iL21hbmFnZXIvZnJhbWVzL3NjcmlwdGFjdWxvdXMvcHJvdG90eXBlLmpzIiA+PC9zY3JpcHQ+DQo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvbWFuYWdlci9mcmFtZXMvc2NyaXB0YWN1bG91cy9zY3JpcHRhY3Vsb3VzLmpzIiA+PC9zY3JpcHQ+DQo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCcgc3JjPScvYXNzZXRzL2pzL2xpZ2h0Ym94L2xpZ2h0Ym94LXB0LTEuNi1jb21wYXQuanMnPjwvc2NyaXB0Pg0KPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSIvYXNzZXRzL2pzL2xpZ2h0Ym94L2xpZ2h0Ym94LmNzcyIgdHlwZT0idGV4dC9jc3MiIG1lZGlhPSJzY3JlZW4iIC8+';
$this->snippetCache['DontLogPageHit']='JHRoaXMtPmNvbmZpZ1sndHJhY2tfdmlzaXRvcnMnXT0wOw0KcmV0dXJuICIiOw==';
$this->snippetCache['PoweredBy']='Ly8gU25pcHBldCBuYW1lOiBQb3dlcmVkQnkNCi8vIFNuaXBwZXQgZGVzY3JpcHRpb246IEEgbGl0dGxlIGxpbmsgdG8gRXRvbWl0ZS4NCi8vIFJldmlzaW9uOiAxLjAwIHNoaXBzIHdpdGggRXRvbWl0ZSAwLjYuMS1GaW5hbA0KDQokdmVyc2lvbiA9ICRldG9taXRlLT5nZXRWZXJzaW9uRGF0YSgpOw0KcmV0dXJuICc8YSBocmVmPSJodHRwOi8vd3d3LmV0b21pdGUuY29tIiB0aXRsZT0iRXRvbWl0ZSBXZWJzaXRlIj5Qb3dlcmVkIGJ5IEV0b21pdGUgPGI+Jy4kdmVyc2lvblsndmVyc2lvbiddLiR2ZXJzaW9uWydwYXRjaF9sZXZlbCddLic8L2I+IDxpPignLiR2ZXJzaW9uWydjb2RlX25hbWUnXS4nKTwvaT4uPC9hPic7';
$this->snippetCache['PageTrail']='Ly8gU25pcHBldCBuYW1lOiBQYWdlVHJhaWwNCi8vIFNuaXBwZXQgZGVzY3JpcHRpb246IE91dHB1dHMgdGhlIHBhZ2UgdHJhaWwsIGJhc2VkIG9uIEJpbGwgV2lsc29uJ3Mgc2NyaXB0DQovLyBSZXZpc2lvbjogMS4wMCBzaGlwcyB3aXRoIEV0b21pdGUgMC42LjEtRmluYWwNCg0KJHNlcCA9ICRldG9taXRlLT5iY1NlcDsgLy8gc3lzdGVtIGJyZWFkY3J1bWIgc2VwZXJhdG9yDQoNCi8vIGVuZCBjb25maWcNCiRwdGFyciA9IGFycmF5KCk7DQokcGlkID0gJGV0b21pdGUtPmRvY3VtZW50T2JqZWN0WydwYXJlbnQnXTsNCiRwdGFycltdID0gIjxhIGhyZWY9J1t+Ii4kZXRvbWl0ZS0+ZG9jdW1lbnRPYmplY3RbJ2lkJ10uIn5dJz4iLiRldG9taXRlLT5kb2N1bWVudE9iamVjdFsncGFnZXRpdGxlJ10uIjwvYT4iOw0KDQp3aGlsZSAoJHBhcmVudD0kZXRvbWl0ZS0+Z2V0UGFyZW50KCRwaWQpKSB7DQogICAgJHB0YXJyW10gPSAiPGEgaHJlZj0nW34iLiRwYXJlbnRbJ2lkJ10uIn5dJz4iLiRwYXJlbnRbJ3BhZ2V0aXRsZSddLiI8L2E+IjsNCiAgICAkcGlkID0gJHBhcmVudFsncGFyZW50J107DQp9DQoNCiRwdGFyciA9IGFycmF5X3JldmVyc2UoJHB0YXJyKTsNCnJldHVybiBqb2luKCRwdGFyciwgJHNlcCk7';
$this->snippetCache['MenuBuilder']='Ly8gU25pcHBldCBuYW1lOiBNZW51QnVpbGRlcg0KLy8gU25pcHBldCBkZXNjcmlwdGlvbjogQnVpbGRzIHRoZSBzaXRlIG1lbnUNCi8vIFJldmlzaW9uOiAxLjAwIHNoaXBzIHdpdGggRXRvbWl0ZSAwLjYuMS1GaW5hbA0KDQokaWQgPSBpc3NldCgkaWQpID8gJGlkIDogJGV0b21pdGUtPmRvY3VtZW50SWRlbnRpZmllcjsNCiRzb3J0YnkgPSAibWVudWluZGV4IjsNCiRzb3J0ZGlyID0gIkFTQyI7DQokZmllbGRzID0gImlkLCBwYWdldGl0bGUsIGRlc2NyaXB0aW9uLCBwYXJlbnQsIGFsaWFzIjsNCg0KJGluZGVudFN0cmluZz0iIjsNCg0KaWYoIWlzc2V0KCRpbmRlbnQpKSB7DQogICAgJGluZGVudCA9ICIiOw0KICAgICRpbmRlbnRTdHJpbmcgLj0gIiI7DQp9IGVsc2Ugew0KICAgIGZvcigkaW49MDsgJGluPCRpbmRlbnQ7ICRpbisrKSB7DQogICAgICAgICRpbmRlbnRTdHJpbmcgLj0gIiZuYnNwOyI7DQogICAgfQ0KICAgICRpbmRlbnRTdHJpbmcgLj0gIiZyYXF1bzsmbmJzcDsiOw0KfQ0KDQokY2hpbGRyZW4gPSAkZXRvbWl0ZS0+Z2V0QWN0aXZlQ2hpbGRyZW4oJGlkLCAkc29ydGJ5LCAkc29ydGRpciwgJGZpZWxkcyk7DQokbWVudSA9ICIiOw0KJGNoaWxkcmVuQ291bnQgPSBjb3VudCgkY2hpbGRyZW4pOw0KJGFjdGl2ZT0iIjsNCg0KaWYoJGNoaWxkcmVuPT1mYWxzZSkgew0KICAgIHJldHVybiBmYWxzZTsNCn0NCmZvcigkeD0wOyAkeDwkY2hpbGRyZW5Db3VudDsgJHgrKykgew0KICBpZigkY2hpbGRyZW5bJHhdWydpZCddPT0kZXRvbWl0ZS0+ZG9jdW1lbnRJZGVudGlmaWVyKSB7DQogICAkYWN0aXZlPSJjbGFzcz1cImhpZ2hMaWdodFwiIjsNCiAgfSBlbHNlIHsNCiAgICAkYWN0aXZlPSIiOw0KIH0NCiBpZigkY2hpbGRyZW5bJHhdWydpZCddPT0kZXRvbWl0ZS0+ZG9jdW1lbnRJZGVudGlmaWVyIHx8ICRjaGlsZHJlblskeF1bJ2lkJ109PSRldG9taXRlLT5kb2N1bWVudE9iamVjdFsncGFyZW50J10pIHsNCiAgICAkbWVudSAuPSAiPGEgIi4kYWN0aXZlLiIgaHJlZj1cIlt+Ii4kY2hpbGRyZW5bJHhdWydpZCddLiJ+XVwiPiRpbmRlbnRTdHJpbmciLiRjaGlsZHJlblskeF1bJ3BhZ2V0aXRsZSddLiI8L2E+W1tNZW51QnVpbGRlcj9pZD0iLiRjaGlsZHJlblskeF1bJ2lkJ10uIiZpbmRlbnQ9Ml1dIjsgIA0KICB9IGVsc2Ugew0KICAgICRtZW51IC49ICI8YSBocmVmPVwiW34iLiRjaGlsZHJlblskeF1bJ2lkJ10uIn5dXCI+JGluZGVudFN0cmluZyIuJGNoaWxkcmVuWyR4XVsncGFnZXRpdGxlJ10uIjwvYT4iOw0KIH0NCn0NCnJldHVybiAkbWVudS4iIjs=';
$this->snippetCache['MetaTagsExtra']='';
$this->snippetCache['GoogleSiteMap_XML']='';
$this->snippetCache['SearchForm']='Ly8gU25pcHBldCBuYW1lOiBTZWFyY2hGb3JtDQovLyBTbmlwcGV0IGRlc2NyaXB0aW9uOiBBbGwtaW4tb25lIHNuaXBwZXQgdG8gc2VhcmNoIHRoZSBzaXRlDQovLyBSZXZpc2lvbjogMS4xIHNoaXBzIHdpdGggRXRvbWl0ZSAwLjYuMS1GaW5hbA0KDQokc2VhcmNoU3RyaW5nID0gDQppc3NldCgkX1BPU1RbJ3NlYXJjaCddKSAmJiANCiRfUE9TVFsnc2VhcmNoJ10hPSAie3siICYmIA0KJF9QT1NUWydzZWFyY2gnXSE9ICJbWyIgJiYgDQokX1BPU1RbJ3NlYXJjaCddIT0gIlsoIiAmJiANCiRfUE9TVFsnc2VhcmNoJ10hPSAiW34iICYmIA0KJF9QT1NUWydzZWFyY2gnXSE9ICJbKiIgPw0KJF9QT1NUWydzZWFyY2gnXSA6ICIiIDsNCg0KDQokU2VhcmNoRm9ybSAuPSAnPGZvcm0gbmFtZT0iU2VhcmNoRm9ybSIgYWN0aW9uPSIiIG1ldGhvZD0icG9zdCI+Jy4iXG4iOyANCiRTZWFyY2hGb3JtIC49ICc8aW5wdXQgdHlwZT0idGV4dCIgbmFtZT0ic2VhcmNoIiBjbGFzcz0idGV4dCIgdmFsdWU9IicuJHNlYXJjaFN0cmluZy4nIiAvPjxiciAvPicuIlxuIjsgDQokU2VhcmNoRm9ybSAuPSAnPGlucHV0IHR5cGU9InN1Ym1pdCIgbmFtZT0ic3ViIiBjbGFzcz0iYnV0dG9uIiB2YWx1ZT0iU2VhcmNoIiAvPicuIlxuIjsgDQokU2VhcmNoRm9ybSAuPSAnPC9mb3JtPic7IA0KDQppZihpc3NldCgkX1BPU1RbJ3NlYXJjaCddKSAmJiAkX1BPU1RbJ3NlYXJjaCddIT0nJykgeyANCiAgICRzZWFyY2ggPSBleHBsb2RlKCIgIiwgJF9QT1NUWydzZWFyY2gnXSk7IA0KICAgJHRibCA9ICRldG9taXRlLT5kYkNvbmZpZ1snZGJhc2UnXS4iLiIuJGV0b21pdGUtPmRiQ29uZmlnWyd0YWJsZV9wcmVmaXgnXS4ic2l0ZV9jb250ZW50IjsNCiAgICRzcWwgPSAiU0VMRUNUIGlkLCBwYWdldGl0bGUsIHBhcmVudCwgZGVzY3JpcHRpb24gRlJPTSAkdGJsIFdIRVJFICgkdGJsLmNvbnRlbnQgTElLRSAnJSIuJHNlYXJjaFswXS4iJSciOyANCiAgIGZvciAoJHg9MTskeCA8IGNvdW50KCRzZWFyY2gpOyAkeCsrKSB7IA0KICAgICAgICRzcWwgLj0gIiBBTkQgJHRibC5jb250ZW50IGxpa2UgJyUkc2VhcmNoWyR4XSUnIjsgDQogICB9IA0KICAgJHNxbCAuPSAiIE9SICR0YmwucGFnZXRpdGxlIExJS0UgJyUiLiRzZWFyY2hbMF0uIiUnICI7IA0KICAgZm9yICgkeD0xOyR4IDwgY291bnQoJHNlYXJjaCk7ICR4KyspIHsgDQogICAgICAgJHNxbCAuPSAiIEFORCAkdGJsLnBhZ2V0aXRsZSBsaWtlICclJHNlYXJjaFskeF0lJyI7IA0KICAgfSANCiAgICRzcWwgLj0gIiBPUiAkdGJsLmRlc2NyaXB0aW9uIExJS0UgJyUiLiRzZWFyY2hbMF0uIiUnICI7IA0KICAgZm9yICgkeD0xOyR4IDwgY291bnQoJHNlYXJjaCk7ICR4KyspIHsgDQogICAgICAgJHNxbCAuPSAiIEFORCAkdGJsLmRlc2NyaXB0aW9uIGxpa2UgJyUkc2VhcmNoWyR4XSUnIjsgDQogICB9IA0KICAgJHNxbCAuPSAiKSBBTkQgJHRibC5wdWJsaXNoZWQgPSAxIEFORCAkdGJsLnNlYXJjaGFibGU9MSBBTkQgJHRibC5kZWxldGVkPTA7IjsgDQogICAkcnMgPSAkZXRvbWl0ZS0+ZGJRdWVyeSgkc3FsKTsgDQogICAkbGltaXQgPSAkZXRvbWl0ZS0+cmVjb3JkQ291bnQoJHJzKTsgDQogICBpZigkbGltaXQ+MCkgeyANCiAgICAgICRTZWFyY2hGb3JtIC49ICI8cD5UaGUgZm9sbG93aW5nIHJlc3VsdHMgd2VyZSBmb3VuZDo8L3A+XG4iOw0KICAgICAgJFNlYXJjaEZvcm0gLj0gIjx0YWJsZSBjZWxsc3BhY2luZz1cIjBcIiBjZWxscGFkZGluZz1cIjBcIj5cbiI7IA0KICAgICAgZm9yICgkeSA9IDA7ICR5IDwgJGxpbWl0OyAkeSsrKSB7IA0KICAgICAgICAgJFNlYXJjaEZvcm1zcmM9JGV0b21pdGUtPmZldGNoUm93KCRycyk7IA0KICAgICAgICAgJFNlYXJjaEZvcm0uPSI8dHI+PHRkIHN0eWxlPVwicGFkZGluZzogMXB4XCI+PGEgaHJlZj1cIlt+Ii4kU2VhcmNoRm9ybXNyY1snaWQnXS4ifl1cIj48Yj4iLiRTZWFyY2hGb3Jtc3JjWydwYWdldGl0bGUnXS4iPC9iPjwvYT48L3RkPlxuIjsNCiAgICAgICAgICRTZWFyY2hGb3JtLj0iPHRkIHN0eWxlPVwicGFkZGluZzogMXB4XCI+IjsgDQogICAgICAgICAkU2VhcmNoRm9ybS49JFNlYXJjaEZvcm1zcmNbJ2Rlc2NyaXB0aW9uJ10hPScnID8gIiAtIDxzbWFsbD4iLiRTZWFyY2hGb3Jtc3JjWydkZXNjcmlwdGlvbiddLiI8L3NtYWxsPiIgOiAiIiA7IA0KICAgICAgICAgJFNlYXJjaEZvcm0gLj0gIjwvdGQ+PC90cj4iOw0KICAgICAgfSANCiAgICAgICRTZWFyY2hGb3JtIC49ICI8L3RhYmxlPiI7DQogICB9IGVsc2UgeyANCiAgICAgICRTZWFyY2hGb3JtLj0iPHA+U29ycnksIGNvdWxkbid0IGZpbmQgYW55dGhpbmchPC9wPiI7IA0KICAgfSANCn0gDQoNCnJldHVybiAkU2VhcmNoRm9ybTs=';
$this->snippetCache['SiteUpdate']='Ly8gU25pcHBldCBuYW1lOiBTaXRlVXBkYXRlDQovLyBTbmlwcGV0IGRlc2NyaXB0aW9uOiBSZXR1cm5zIGRhdGUgb2YgbW9zdCByZWNlbnQgcHVibGlzaGVkIGRvY3VtZW50IHVwZGF0ZQ0KLy8gUmV2aXNpb246IDEuMiBzaGlwcyB3aXRoIEV0b21pdGUgUHJlbHVkZSB2MS4wDQoNCi8vIEF1dGhvcjogUmFscGggQS4gRGFobGdyZW4gLS0gMjAwNS0wNy0xMw0KLy8gVXNhZ2U6IFshU2l0ZVVwZGF0ZT9kYXRlRm9ybWF0PSVCICVlLCAlWSFdIFJldHVybnMgZGF0ZSBmb3JtYXR0ZWQ6IEp1bHkgMTMsIDIwMDUgDQovLyBTZWUgc3RyZnRpbWUoKSBkb2N1bWVudGF0aW9uIGZvciBhZGRpdGlvbmFsIGZvcm1hdHRpbmcgb3B0aW9ucw0KDQovLyBDaGFuZ2VzOg0KLy8gICB2MS4xIGJ5IExsb3lkIEJvcnJldHQgLS0gMjAwNi0wNC0wNw0KLy8gICAgIFJldHVybiBsb2NhbCB0aW1lIGJhc2VkIG9uIEV0b21pdGUgc2VydmVyIG9mZnNldCB0aW1lDQovLyAgIHYxLjIgYnkgUmFscGggQS4gRGFobGdyZW4gLS0gMjAwOC0wNC0xMg0KLy8gICAgIElnbm9yZSB1bnB1Ymxpc2hlZCBhbmQgZGVsZXRlZCBkb2N1bWVudHMNCi8vICAgICBVc2UgRGF0ZSBhbmQgVGltZSBmb3JtYXRzIGZyb20gY29uZmlndXJhdGlvbg0KDQovLyB3YXMgJGRhdGVGb3JtYXQgc2VudCBpbiBzbmlwcGV0IGNhbGw/DQppZihpc3NldCgkZGF0ZUZvcm1hdCkpDQp7DQogIC8vIHVzZSAkZGF0ZUZvcm1hdCBzZW50IGluIHNuaXBwZXQgY2FsbA0KICAkZm9ybWF0ID0gJGRhdGVGb3JtYXQ7DQp9DQplbHNlDQp7DQogIC8vIHVzZSBkZWZhdWx0IERhdGUgJiBUaW1lIGZvcm1hdHMgZnJvbSBjb25maWd1cmF0aW9uDQogICRmb3JtYXQgPSAkZXRvbWl0ZS0+Y29uZmlnWydkYXRlX2Zvcm1hdCddLiIgIi4kZXRvbWl0ZS0+Y29uZmlnWyd0aW1lX2Zvcm1hdCddOw0KfQ0KDQovLyBnZXQgdGhlIEV0b21pdGUgc2VydmVyIG9mZnNldCB0aW1lIGluIHNlY29uZHMNCiRzZXJ2ZXJfb2Zmc2V0X3RpbWUgPSAkZXRvbWl0ZS0+Y29uZmlnWydzZXJ2ZXJfb2Zmc2V0X3RpbWUnXTsNCi8vIGlmIG5vIHNlcnZlciBvZmZzZXQgdGltZSB3YXMgZm91bmQsIHVzZSB6ZXJvDQppZighJHNlcnZlcl9vZmZzZXRfdGltZSkNCnsNCiAgJHNlcnZlcl9vZmZzZXRfdGltZSA9IDA7DQp9DQoNCi8vIGRlZmluZSBvdXIgZGF0YWJhc2UgcXVlcnkNCiRzcWwgPSA8PDxRVUVSWQ0KICBTRUxFQ1QgZWRpdGVkb24gDQogIEZST00geyRldG9taXRlLT5kYn1zaXRlX2NvbnRlbnQgDQogIFdIRVJFIHB1Ymxpc2hlZD0xDQogIEFORCBkZWxldGVkPTANCiAgT1JERVIgQlkgZWRpdGVkb24gREVTQw0KUVVFUlk7DQoNCi8vIHBlcmZvcm0gdGhlIGRhdGFiYXNlIHF1ZXJ5DQokcnMgPSAkZXRvbWl0ZS0+ZGJRdWVyeSgkc3FsKTsNCg0KLy8gY2hlY2sgdG8gc2VlIGlmIHJlc3VsdHMgd2VyZSByZXR1cm5lZA0KaWYoJGV0b21pdGUtPnJlY29yZENvdW50KCRycykgPiAwKQ0Kew0KICAvLyBmZXRjaCB0aGUgZmlyc3QgZGF0YSByb3cgKGxhc3QgZWRpdGVkKQ0KICAkcm93ID0gJGV0b21pdGUtPmZldGNoUm93KCRycyk7DQogIC8vIGFkZCBzZXJ2ZXIgb2Zmc2V0IHRvIHRpbWVzdGFtcA0KICAkdXBkYXRlID0gc3RyZnRpbWUoJGZvcm1hdCwkcm93WydlZGl0ZWRvbiddICsgJHNlcnZlcl9vZmZzZXRfdGltZSk7DQp9DQplbHNlDQp7DQogIC8vIG5vIHJlc3VsdHMgcmV0dXJuZWQgc28gc2V0IHRvIG51bGwNCiAgJHVwZGF0ZSA9IG51bGw7DQp9DQoNCi8vIHJldHVybiBmb3JtYXR0ZWQgdGltZXN0YW1wIHRvIGNhbGxlcg0KcmV0dXJuICR1cGRhdGU7';
$this->snippetCache['SearchPrompt']='Ly8gU25pcHBldCBuYW1lOiBTZWFyY2hQcm9tcHQNCi8vIFNuaXBwZXQgZGVzY3JpcHRpb246IFNlYXJjaCBwcm9tcHQgc25pcHBldCBmb3IgdXNlIHdpdGggU2VhcmNoUmVzdWx0cw0KLy8gUmV2aXNpb246IDEuMDAgc2hpcHMgd2l0aCBFdG9taXRlIDAuNi4xLUZpbmFsDQovLyBVc2U6IFshU2VhcmNoUHJvbXB0P3Jlc3VsdHNpZD0jIyMhXSBzbmlwcGV0IGNhbGwgd2hlcmUgIyMjIGlzIHRoZQ0KLy8gICBkb2N1bWVudCBpZCBvZiB0aGUgcGFnZSB3aGljaCBjb250YWlucyB0aGUgWyFTZWFyY2hSZXN1bHRzIV0gc25pcHBldCBjYWxsDQoNCiRyZXN1bHRzRGVmYXVsdCA9ICIxNCI7ICAvLyBEb2N1bWVudCBpZCB0byB1c2UgaWYgJHJlc3VsdHNpZCBub3Qgc2VudA0KJHJlc3VsdHNpZCA9IGlzc2V0KCRyZXN1bHRzaWQpID8gJHJlc3VsdHNpZCA6ICRyZXN1bHRzRGVmYXVsdDsNCg0KJHByb21wdCA9ICJTZWFyY2ggdGhpcyBzaXRlIjsgIC8vIFNlYXJjaCBib3ggbGFiZWwgdGV4dA0KJHN1Ym1pdCA9ICJTZWFyY2giOyAgLy8gU3VibWl0IGJ1dHRvbiBsYWJlbA0KDQokb3V0cHV0ID0gDQo8PDxFTkQNCjxmb3JtIGlkPSJTZWFyY2hGb3JtIiBhY3Rpb249Ilt+eyRyZXN1bHRzaWR9fl0iIG1ldGhvZD0icG9zdCI+IA0KICA8ZGl2IGNsYXNzPSJzZWFyY2hib3giIHN0eWxlPSJ0ZXh0LWFsaWduOmNlbnRlcjsiPg0KICAgIDxwPnskcHJvbXB0fTwvcD4NCiAgICA8cD48aW5wdXQgdHlwZT0idGV4dCIgbmFtZT0ic2VhcmNoIiB2YWx1ZT0iIiAvPjwvcD4NCiAgICA8cD48aW5wdXQgdHlwZT0ic3VibWl0IiBuYW1lPSJzdWIiIGNsYXNzPSJidXR0b24iIHZhbHVlPSJ7JHN1Ym1pdH0iIC8+PC9wPg0KICA8L2Rpdj4NCjwvZm9ybT4NCkVORDsNCg0KcmV0dXJuICRvdXRwdXQ7';
$this->snippetCache['SearchResults']='Ly8gIFNlYXJjaFJlc3VsdHMNCi8vICBEaXNwbGF5cyByZXN1bHRzIG9mIFNlYXJjaFByb21wdCBzbmlwcGV0DQoNCiRub1Jlc3VsdHMgPSAiPHA+Tm8gc2VhcmNoIHJlc3VsdHMgd2VyZSBmb3VuZC48L3A+IjsNCiRyZXN1bHRzVGV4dCA9ICI8cD5UaGUgZm9sbG93aW5nIHJlc3VsdHMgd2VyZSBmb3VuZDo8L3A+IjsNCiRzZWFyY2hTdHJpbmcgPSANCmlzc2V0KCRfUE9TVFsnc2VhcmNoJ10pICYmIA0KJF9QT1NUWydzZWFyY2gnXSE9ICJ7eyIgJiYgDQokX1BPU1RbJ3NlYXJjaCddIT0gIltbIiAmJiANCiRfUE9TVFsnc2VhcmNoJ10hPSAiWygiICYmIA0KJF9QT1NUWydzZWFyY2gnXSE9ICJbfiIgJiYgDQokX1BPU1RbJ3NlYXJjaCddIT0gIlsqIiA/DQokX1BPU1RbJ3NlYXJjaCddIDogIiIgOw0KDQppZihpc3NldCgkX1BPU1RbJ3NlYXJjaCddKSAmJiAkX1BPU1RbJ3NlYXJjaCddIT0nJykgeyANCiAgICRzZWFyY2ggPSBleHBsb2RlKCIgIiwgJF9QT1NUWydzZWFyY2gnXSk7IA0KICAgJHNxbCA9ICJTRUxFQ1QgaWQsIHBhZ2V0aXRsZSwgcGFyZW50LCBkZXNjcmlwdGlvbiBGUk9NICIuJGV0b21pdGUtPmRiLnNpdGVfY29udGVudC4iIFdIRVJFIChjb250ZW50IExJS0UgJyUiLiRzZWFyY2hbMF0uIiUnIjsgDQogICBmb3IgKCR4PTE7JHggPCBjb3VudCgkc2VhcmNoKTsgJHgrKykgeyANCiAgICAgICAkc3FsIC49ICIgQU5EIGNvbnRlbnQgbGlrZSAnJSRzZWFyY2hbJHhdJSciOyANCiAgIH0gDQogICAkc3FsIC49ICIgT1IgcGFnZXRpdGxlIExJS0UgJyUiLiRzZWFyY2hbMF0uIiUnICI7IA0KICAgZm9yICgkeD0xOyR4IDwgY291bnQoJHNlYXJjaCk7ICR4KyspIHsgDQogICAgICAgJHNxbCAuPSAiIEFORCBwYWdldGl0bGUgbGlrZSAnJSRzZWFyY2hbJHhdJSciOyANCiAgIH0gDQogICAkc3FsIC49ICIgT1IgZGVzY3JpcHRpb24gTElLRSAnJSIuJHNlYXJjaFswXS4iJScgIjsgDQogICBmb3IgKCR4PTE7JHggPCBjb3VudCgkc2VhcmNoKTsgJHgrKykgeyANCiAgICAgICAkc3FsIC49ICIgQU5EIGRlc2NyaXB0aW9uIGxpa2UgJyUkc2VhcmNoWyR4XSUnIjsgDQogICB9IA0KICAgJHNxbCAuPSAiKSBBTkQgcHVibGlzaGVkID0gMSBBTkQgc2VhcmNoYWJsZT0xIEFORCBkZWxldGVkPTA7IjsgDQogICAkcnMgPSAkZXRvbWl0ZS0+ZGJRdWVyeSgkc3FsKTsgDQogICAkbGltaXQgPSAkZXRvbWl0ZS0+cmVjb3JkQ291bnQoJHJzKTsgDQogICBpZigkbGltaXQ+MCkgeyANCiAgICAgICRTZWFyY2hGb3JtIC49ICRyZXN1bHRzVGV4dC4iPHA+PHRhYmxlIGNlbGxzcGFjaW5nPScwJyBjZWxscGFkZGluZz0nMCc+IjsgDQogICAgICBmb3IgKCR5ID0gMDsgJHkgPCAkbGltaXQ7ICR5KyspIHsgDQogICAgICAgICAkU2VhcmNoRm9ybXNyYz0kZXRvbWl0ZS0+ZmV0Y2hSb3coJHJzKTsgDQogICAgICAgICAkU2VhcmNoRm9ybS49Ijx0cj48dGQgc3R5bGU9J3BhZGRpbmc6IDFweCc+PGEgaHJlZj0nW34iLiRTZWFyY2hGb3Jtc3JjWydpZCddLiJ+XSc+PGI+Ii4kU2VhcmNoRm9ybXNyY1sncGFnZXRpdGxlJ10uIjwvYj48L2E+PC90ZD48dGQgc3R5bGU9J3BhZGRpbmc6IDFweCc+IjsgDQogICAgICAgICAkU2VhcmNoRm9ybS49JFNlYXJjaEZvcm1zcmNbJ2Rlc2NyaXB0aW9uJ10hPScnID8gIiAtIDxzbWFsbD4iLiRTZWFyY2hGb3Jtc3JjWydkZXNjcmlwdGlvbiddLiI8L3NtYWxsPiIgOiAiIiA7IA0KICAgICAgICAgJFNlYXJjaEZvcm0gLj0gIjwvdGQ+PC90cj4iOw0KICAgICAgfSANCiAgICAgICRTZWFyY2hGb3JtIC49ICI8L3RhYmxlPiI7DQogICB9IGVsc2UgeyANCiAgICAgICRTZWFyY2hGb3JtIC49ICRub1Jlc3VsdHM7IA0KICAgfSANCn0gDQoNCnJldHVybiAkU2VhcmNoRm9ybTs=';
$this->snippetCache['GetDocContent']='IyBTbmlwcGV0OiAgR2V0RG9jQ29udGVudCAtLSBFdG9taXRlIFByZWx1ZGUgdjEuMA0KIyBBdXRob3I6ICAgUmFscGggQS4gRGFobGdyZW4NCiMgQ3JlYXRlZDogIDIwMDUtMDQtMTcNCiMgTW9kaWZpZWQ6IDIwMDgtMDQtMTcNCiMgUHVycG9zZTogIFJldHVybnMgYWRkaXRpb25hbCBkb2N1bWVudCBjb250ZW50IGZvciBpbmNsdXNpb24gaW4gYSBwYWdlDQojIFVzYWdlOiBbW0dldERvY0NvbnRlbnQ/aWQ9bm5dXSB3aGVyZSBubiA9IGlkIG9mIHRoZSBkb2N1bWVudCBiZWluZyByZXF1ZXN0ZWQNCg0KLy8gaWYgYSBkb2N1bWVudCBpZCB3YXMgc2VudCwgZmV0Y2ggdGhlIGRvY3VtZW50IGNvbnRlbnQNCmlmKGlzc2V0KCRpZCkpDQp7DQogIC8vIHdlIG9ubHkgd2FudCB0aGUgY29udGVudCBjb2x1bW4NCiAgJGZpZWxkcyA9ICJjb250ZW50IjsNCiAgLy8gcXVlcnkgdGhlIGRhdGFiYXNlIGZvciBvdXIgcmVjb3JkDQogICRkb2MgPSAkZXRvbWl0ZS0+Z2V0RG9jdW1lbnQoJGlkLCAkZmllbGRzKTsNCiAgLy8gaWYgb3VyIHJlY29yZCB3YXMgZm91bmQsIHJldHVybiB0aGUgY29udGVudA0KICBpZigkZG9jKQ0KICB7DQogICAgcmV0dXJuICRkb2NbJ2NvbnRlbnQnXTsNCiAgfQ0KfQ0KDQovLyBpZiBhbGwgZWxzZSBmYWlscywgcmV0dXJuIGVtcHR5DQpyZXR1cm47DQo=';
$this->snippetCache['membership_validator']='';
$this->snippetCache['membership_verifier']='';
$this->snippetCache['authenticate_visitor']='';
$this->snippetCache['pagetitle']='Ly8gZ2V0IHBhZ2UgdGl0bGUNCg0KaWYoJF9TRVNTSU9OWyd2YWxpZGF0ZWQnXT09MSl7DQoJJHVpbmZvID0gIjxkaXYgc3R5bGU9J2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXNpemU6MTFweDtmbG9hdDpyaWdodDtwYWRkaW5nOjEwcHg7Jz5XZWxjb21lOiAiLiRfU0VTU0lPTlsnZnVsbG5hbWUnXS4iICggIi4kX1NFU1NJT05bJ3Nob3J0bmFtZSddLiIgKTwvZGl2PiI7DQp9ZWxzZXsgDQoJJHVpbmZvID0gIjxkaXYgc3R5bGU9J2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXNpemU6MTFweDtmbG9hdDpyaWdodDtwYWRkaW5nOjEwcHg7Jz5WaXNpdGluZyBhczogR3Vlc3QgLSA8YSBocmVmPSdyZWdpc3Rlci5odG1sJz5SZWdpc3RlcjwvYT4gb3IgPGEgaHJlZj0nbG9naW4uaHRtbCc+TG9naW48L2E+PC9kaXY+IjsgDQp9DQoNCiRwYWdlID0gJGV0b21pdGUtPmdldERvY3VtZW50KCRldG9taXRlLT5kb2N1bWVudElkZW50aWZpZXIsICRmaWVsZHM9InBhZ2V0aXRsZSIpOw0KDQokb3V0cHV0ID0gIjxkaXYgY2xhc3M9J3BhZ2UtdGl0bGUnPjxoMiBzdHlsZT0nZmxvYXQ6bGVmdDsnPiIuJHBhZ2VbJ3BhZ2V0aXRsZSddLiI8L2gyPiIuJHVpbmZvLiI8ZGl2IHN0eWxlPSdjbGVhcjpib3RoOyc+PC9kaXY+PC9kaXY+IjsNCi8vJG91dHB1dCA9ICI8ZGl2IHN0eWxlPSdmbG9hdDpsZWZ0Jz4iLiRwYWdlWydwYWdldGl0bGUnXS4iPC9kaXY+PGRpdiBzdHlsZT0nY2xlYXI6Ym90aDsnPjwvZGl2PiI7DQpyZXR1cm4gJG91dHB1dDs=';
$this->snippetCache['cron_snip']='Ly8gY3JvbiBzbmlwcGV0IHRvIHJ1biBhdCB2YXJpb3VzIHRpbWVzIGR1cmluZyB0aGUgZGF5Lg0KDQovLyBjaGFuZ2UgdGhlIGFjdGl2ZSBzdGF0dXMgb2YgYSBjbGFzc2lmaWVkIGlmIGl0IGlzIGV4cGlyZWQuDQoNCi8vIGdldCBjdXJyZW50IGRhdGUgYW5kIHRpbWUNCg0KJG91dHB1dCA9ICcnOw0KDQokZHQgPSBkYXRlKCJZLW0tZCA6IEg6aTpzIik7DQoNCiRyZXN1bHQgPSAkZXRvbWl0ZS0+dXBkSW50VGFibGVSb3dzKCRmaWVsZHM9YXJyYXkoJ2FjdGl2ZSc9PjApLCRpbnRvPSdjbGFzc2lmaWVkcycsJHdoZXJlPSJhY3RpdmU9MSBBTkQgZXhwPCciLiRkdC4iJyIpOw0KJG51bXMgPSAkZXRvbWl0ZS0+YWZmZWN0ZWRSb3dzKCk7DQoNCmlmKCRudW1zPjApew0KCSRvdXRwdXQgLj0gIlsiLiRkdC4iXSAtIFRoZXJlIHdlcmUgIi4kbnVtcy4iIHNldCBhY3RpdmU9MDxiciAvPlxuIjsNCn1lbHNlew0KCSRvdXRwdXQgLj0gIlsiLiRkdC4iXSAtIFRoZXJlIHdlcmUgIi4kbnVtcy4iIHNldCBhY3RpdmU9MDxiciAvPlxuIjsNCn0NCg0KDQovLyBtb3ZlIGFkcyBvbGRlciB0aGFuIDMwIGRheXMgb2YgZXhwIHRvIHRoZSBhcmNoaXZlIHRhYmxlLg0KDQokdG0gPSB0aW1lKCk7IC8vIGN1cnJlbnQgdGltZQ0KJHdlNCA9IHN0cnRvdGltZSgiLTEgd2Vla3MiLCR0bSk7IC8vIHRpbWVzdGFtcCAxIHdlZWtzIGJhY2sNCiR3ZTRGID0gZGF0ZSgiWS1tLWQgSDppOnMiLCR3ZTQpOyAvLyAxIHdlZWtzIGJhY2sgZm9ybWF0dGVkDQoNCiRyZXN1bHQyID0gJGV0b21pdGUtPmdldEludFRhYmxlUm93cygkZmllbGRzPScqJywgJGZyb209J2NsYXNzaWZpZWRzJywgJHdoZXJlPSJleHA8JyIuJHdlNEYuIicgQU5EIGFjdGl2ZT0wIik7DQokbnVtczIgPSAkZXRvbWl0ZS0+YWZmZWN0ZWRSb3dzKCk7DQppZighZW1wdHkoJHJlc3VsdDIpICYmICRudW1zMj4wKXsNCgkvLyB0aW1lIHRvIG1vdmUgdGhlIGZpZWxkcw0KCS8vIGZpcnN0IG1vdmUgdGhlbSB0byB0aGUgbmV3IGFyY2hpdmUgdGFibGUNCglmb3JlYWNoKCRyZXN1bHQyIGFzICRyb3cpew0KCQl3aGlsZShsaXN0KCRrZXksJHZhbCk9ZWFjaCgkcm93KSl7DQoJCQkkcm93WyRrZXldID0gbXlzcWxfcmVhbF9lc2NhcGVfc3RyaW5nKCR2YWwpOw0KCQl9DQoJCSRyb3dbJ2NsYXNzX2lkJ10gPSAkcm93WydpZCddOw0KCQl1bnNldCgkcm93WydpZCddKTsNCgkJJHJlc3VsdCA9ICRldG9taXRlLT5wdXRJbnRUYWJsZVJvdygkZmllbGRzPSRyb3csJGludG89J2NsYXNzaWZpZWRzX2FyY2hpdmUnKTsNCgkJJG91dHB1dCAuPSAiWyIuJGR0LiJdIC0gTW92ZWQgY2xhc3NpZmllZCBpZDogIi4kcm93WydjbGFzc19pZCddLiIhPGJyIC8+XG4iOw0KCQkvLyBkZWxldGUgdGhlIHJlY29yZCBmcm9tIHRoZSBtYWluIGNsYXNzaWZpZWRzIHRhYmxlDQoJCSRyZGVsID0gJGV0b21pdGUtPmRiUXVlcnkoIkRFTEVURSBGUk9NICIuJGV0b21pdGUtPmRiLiJjbGFzc2lmaWVkcyBXSEVSRSBpZD0iLiRyb3dbJ2NsYXNzX2lkJ10uIiBMSU1JVCAxIik7DQoJfQ0KfWVsc2V7DQoJLy8gbm8gcm93cyB0byBtb3ZlDQoJJG91dHB1dCAuPSAiWyIuJGR0LiJdIC0gVGhlcmUgYXJlIG5vIGNsYXNzaWZpZWRzIHRvIGFyY2hpdmUgdG9kYXkhPGJyIC8+XG4iOw0KfQ0KDQovLyBnZXQgYWxsIGNsYXNzaWZpZWRzIHN1Ym1pdHRlZCB0b2RheSB0byBzZW5kIHRvIG9mZmljZS4uDQp1bnNldCgkcmVzdWx0LCRyZXN1bHQyLCRudW1zLCRudW1zMiwkcm93KTsNCi8qDQovLyBnZXQgeWVzdGVyZGF5J3MgZGF0ZQ0KJHlkID0gc3RydG90aW1lKCItMSBkYXkiLCR0bSk7DQokeWQgPSBkYXRlKCJZLW0tZCBIOmk6cyIsJHlkKTsNCi8vIHRpbWVzdGFtcCBmb3JtYXQgdG8gc2hvdyB5ZXN0ZXJkYXkgYXQgNXBtDQokeWR0ID0gbWt0aW1lKDE3LDAsMCxzdWJzdHIoJHlkLDUsMiksc3Vic3RyKCR5ZCw4LDIpLHN1YnN0cigkeWQsMCw0KSk7DQovLyByZWFkYWJsZSBmb3JtYXQgb2YgdGltZQ0KJHlkZiA9IGRhdGUoIlktbS1kIEg6aTpzIiwkeWR0KTsNCg0KJG91dHB1dCAuPSAiWyIuJGR0LiJdIC0gVGltZSBhbmQgRGF0ZSBmb3IgeWVzdGVyZGF5IGF0IDU6MDBwbSA6ICIuJHlkZi4iPGJyIC8+XG4iOw0KDQokcmVzdWx0cyA9ICRldG9taXRlLT5nZXRJbnRUYWJsZVJvd3MoJGZpZWxkcz0iKiIsICRmcm9tPSJjbGFzc2lmaWVkcyIsICR3aGVyZT0ibWVtX2lkIT0xIEFORCBhZGRlZD4nIi4keWRmLiInIEFORCBleHA+JyIuJGR0LiInIiwgJHNvcnQ9J2FkZGVkJywgJGRpcj0nQVNDJyk7DQovLyBydW4gdGhyb3VnaCByZXN1bHRzIHRvIHB1dCB0aGVtIGludG8gYW4gb3V0cHV0IHRvIGJlIG1haWxlZC4NCiRudW1zID0gJGV0b21pdGUtPmFmZmVjdGVkUm93cygpOw0KaWYoIWVtcHR5KCRyZXN1bHRzKSAmJiAkbnVtcz4wKXsNCgkvLyBwcmVwYXJlIHRoZSBtYWlsDQoJJG1lc3MgPSAiPGgyPkNsYXNzaWZpZWRzIFJlcG9ydCBmb3IgIi4kZHQuIiE8L2gyPjxociAvPiI7DQoJJG1lc3MgLj0gJzx0YWJsZSB3aWR0aD0iMTAwJSIgYm9yZGVyPSIxIiBjZWxscGFkZGluZz0iMyIgY2VsbHNwYWNpbmc9IjMiPjx0cj48dGQ+SUQ8L3RkPjx0ZD5DbGFzc2lmaWVkPC90ZD48dGQ+Q2F0ZWdvcnk8L3RkPjx0ZD5NZW1iZXI8L3RkPjx0ZD5EYXRlIEFkZGVkPC90ZD48dGQ+RGF0ZSBFeHBpcmVzPC90ZD48dGQ+RXllIFN0b3BwZXI8L3RkPjx0ZD5Cb2xkIEJveDwvdGQ+PHRkPldlZWtzPC90ZD48dGQ+UHVibGljYXRpb24ocyk8L3RkPjx0ZD5QYXlwYWwgVHJhbnNhY3Rpb24gIzwvdGQ+PHRkPkFjdGl2ZTwvdGQ+PC90cj4nOw0KCWZvcmVhY2goJHJlc3VsdHMgYXMgJHJlcyl7DQoJCSRtZW0gPSAkZXRvbWl0ZS0+Z2V0QXV0aG9yRGF0YSgkcmVzWydtZW1faWQnXSkvLyBnZXQgbWVtYmVyIGluZm8gaW4gYW4gYXJyYXkNCgkJJG1lc3MgLj0gIjx0cj48dGQ+Ii4kcmVzWydpZCddLiI8L3RkPjx0ZD4iLiRyZXNbJ2NvbnRlbnQnXS4iPC90ZD48dGQ+Ii4kZ2V0Q2F0TmFtZSgkcmVzWydjYXRfaWQnXSkuIjwvdGQ+PHRkPiIuJG1lbVsnZnVsbG5hbWUnXS4iIC0gIi4kbWVtWydlbWFpbCddLiIgLSAiLiRtZW1bJ3Bob25lJ10uIjwvdGQ+PHRkPiIuJHJlc1snYWRkZWQnXS4iPC90ZD48dGQ+Ii4kcmVzWydleHAnXS4iPC90ZD48dGQ+Ii4kc3RvcHBlci4iPC90ZD48dGQ+Ii4kYm9sZC4iPC90ZD48dGQ+Ii4kcmVzWyd3ZWVrcyddLiI8L3RkPjx0ZD4iLiRyZXNbJ3B1YiddLiI8L3RkPjx0ZD4iLiRyZXNbJ3R4bl9pZCddLiI8L3RkPjx0ZD4iLiRhY3RpdmUuIjwvdGQ+PC90cj4iOw0KCX0NCgkkbWVzcyAuPSAiPC90YWJsZT4iOw0KCQ0KCQ0KCQ0KfWVsc2V7DQoJLy8gc29ycnkgdGhlcmUgYXJlIG5vIHN1Ym1pdHRlZCBjbGFzc2lmaWVkcyB0byBtYWlsDQoJJG91dHB1dCAuPSAiWyIuJGR0LiJdIC0gVGhlcmUgYXJlIG5vIGNsYXNzaWZpZWRzIHRvIHJlcG9ydCBmb3IgdG9kYXkhPGJyIC8+XG4iOw0KfQ0KDQovLyRvdXRwdXQgLj0gIjQgd2Vla3MgYmFjayBpbiB0aW1lID0gIi5kYXRlKCJZLW0tZCBIOmk6cyIsJHdlNCkuIjxiciAvPlxuIjsNCiovDQoNCnJldHVybiAkb3V0cHV0Ow==';
$this->snippetCache['Pagination']='LyogbmV3IHBhZ2luYXRpb24gKi8NCmZ1bmN0aW9uIHBhZ2luYXRpb24oJHRvdGFsX3BhZ2VzLCRwYWdlLCR0b3RhbCwkdXJsLCR0aXRsZT0iIExpc3RpbmdzIil7DQoNCgkvL2dsb2JhbCAkdXJsOw0KCSR3ZWJwYWdlID0gJHVybDsNCg0KCSRwYWdpbmF0aW9uID0gJzxkaXYgY2xhc3M9InBhZ05hdiI+DQoJCQkJCTx1bD4NCgkJCQkJPGxpPjxzdHJvbmc+UGFnZXM6PC9zdHJvbmc+PC9saT4nOw0KCQkJCQkNCglpZigkdG90YWxfcGFnZXM+MSl7DQoJDQoJCS8vdGhlIHRvdGFsIGxpbmtzIHZpc2libGUNCgkJICANCgkJJG1heF9saW5rcz0xMDsNCgkJDQoJCQ0KCQkvLyRtYXggbGlua3NfbWFya2VyIGlzIHRoZSB0b3Agb2YgdGhlIGxvb3ANCgkJLy8kaCBpcyB0aGUgc3RhcnQNCgkJDQoJCSRtYXhfbGlua3NfbWFya2VyID0gJG1heF9saW5rcysxOyAgICAgICAgICAgIA0KCQkkaD0xOyAgICAgICAgICAgIA0KCQkNCgkJDQoJCS8vJGxpbmtfYmxvY2sgaXMgdGhlIGJsb2NrIG9mIGxpbmtzIG9uIHRoZSBwYWdlDQoJCS8vV2hlbiB0aGlzIGlzIGFuIGludGVnZXIgd2UgbmVlZCBhIG5ldyBibG9jayBvZiBsaW5rcw0KCQkJCSAgDQoJCSRsaW5rX2Jsb2NrPSgoJHBhZ2UtMSkvJG1heF9saW5rcyk7DQoJCQ0KCQkvL2lmIHRoZSBwYWdlIGlzIGdyZWF0ZXIgdGhhbiB0aGUgdG9wIG9mIHRoIGxvb3AgYW5kIGxpbmsgYmxvY2sNCgkJLy9pcyBhbiBpbnRlZ2VyDQoJCQ0KCQlpZigoJHBhZ2U+PSRtYXhfbGlua3NfbWFya2VyKSYmKGlzX2ludCgkbGlua19ibG9jaykpKXsNCgkJDQoJCQkJLy9yZXNldCB0aGUgdG9wIG9mIHRoZSBsb29wIHRvIGEgbmV3IGxpbmsgYmxvY2sNCgkJDQoJCQkkbWF4X2xpbmtzX21hcmtlcj0kcGFnZSskbWF4X2xpbmtzOw0KCQkJDQoJCQkJLy9hbmQgc2V0IHRoZSBib3R0b20gb2YgdGhlIGxvb3AgICAgICAgICANCgkJCQ0KCQkJJGg9JG1heF9saW5rc19tYXJrZXItJG1heF9saW5rczsNCgkJCSRwcmV2PSRoLTE7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCgkJfQ0KCQkNCgkJCS8vaWYgbm90IGFuIGludGVnZXIgd2UgYXJlIHN0aWxsIHdpdGhpbiBhIGxpbmsgYmxvY2sNCgkJDQoJCWVsc2VpZigoJHBhZ2U+PSRtYXhfbGlua3NfbWFya2VyKSYmKCFpc19pbnQoJGxpbmtfYmxvY2spKSl7DQoJCQkNCgkJCQkvL3JvdW5kIHVwIHRoZSBsaW5rIGJsb2NrDQoJCQkNCgkJCSRyb3VuZF91cD1jZWlsKCRsaW5rX2Jsb2NrKTsNCgkJCQkJDQoJCQkkbmV3X3RvcF9saW5rID0gJHJvdW5kX3VwKiRtYXhfbGlua3M7DQoJCQkNCgkJCQkvL2FuZCBzZXQgdGhlIHRvcCBvZiB0aGUgbG9vcCB0byB0aGUgdG9wIGxpbmsNCgkJCQ0KCQkJJG1heF9saW5rc19tYXJrZXI9JG5ld190b3BfbGluaysxOw0KCQkJDQoJCQkJLy9hbmQgdGhlIGJvdHRvbSBvZiB0aGUgbG9vcCB0byB0aGUgdG9wIC0gbWF4IGxpbmtzDQoJCQkNCgkJCSRoPSRtYXhfbGlua3NfbWFya2VyLSRtYXhfbGlua3M7DQoJCQkkcHJldj0kaC0xOyAgICAgICAgICAgICAgICAgICAgICAgICAgICANCgkJfQ0KCQkNCgkJICAvL2lmIGdyZWF0ZXIgdGhhbiB0b3RhbCBwYWdlcyB0aGVuIHNldCB0aGUgdG9wIG9mIHRoZSBsb29wIHRvDQoJCSAgLy8gdG90YWxfcGFnZXMNCgkJDQoJCWlmKCRtYXhfbGlua3NfbWFya2VyPiR0b3RhbF9wYWdlcyl7DQoJCQkkbWF4X2xpbmtzX21hcmtlcj0kdG90YWxfcGFnZXMrMTsNCgkJfQ0KCQkNCgkJCS8vZmlyc3QgYW5kIHByZXYgYnV0dG9ucw0KCQkNCgkJaWYoJHBhZ2U+JzEnKXsNCgkJCSRwYWdpbmF0aW9uLj0nPGxpIGNsYXNzPSJmaXJzdCI+PGEgaHJlZj0iJy4kd2VicGFnZS4nL3BhZ2UvMSI+JmxhcXVvOzwvYT48L2xpPg0KCQkJPGxpIGNsYXNzPSJwcmV2Ij48YSBocmVmPSInLiR3ZWJwYWdlLicvcGFnZT0nLigkcGFnZS0xKS4nIj4mbHNhcXVvOzwvYT48L2xpPic7DQoJCX0NCgkJDQoJCQkvL3Byb3ZpZGUgYSBsaW5rIHRvIHRoZSBwcmV2aW91cyBibG9jayBvZiBsaW5rcw0KCQkNCgkJDQoJCSRwcmV2X3N0YXJ0ID0gJGgtJG1heF9saW5rczsgDQoJCSRwcmV2X2VuZCA9ICRoLTE7DQoJCWlmKCRwcmV2X3N0YXJ0IDw9MSl7DQoJCQkkcHJldl9zdGFydD0xOw0KCQl9DQoJCSRwcmV2X2Jsb2NrID0gIlBhZ2VzICRwcmV2X3N0YXJ0IHRvICRwcmV2X2VuZCI7DQoJCQ0KCQlpZigkcGFnZT4kbWF4X2xpbmtzKXsNCgkJCSRwYWdpbmF0aW9uLj0nPGxpIGNsYXNzPSJjdXJyZW50Ij48YSBocmVmPSInLiR3ZWJwYWdlLicvcGFnZS8nLiRwcmV2LiciPicuJHByZXZfYmxvY2suJzwvYT48L2xpPic7DQoJCX0NCgkJDQoJCQkvL2xvb3AgdGhyb3VnaCB0aGUgcmVzdWx0cw0KCQkJDQoJCWZvciAoJGk9JGg7JGk8JG1heF9saW5rc19tYXJrZXI7JGkrKyl7DQoJCQlpZigkaT09JHBhZ2Upew0KCQkJCSRwYWdpbmF0aW9uLj0gJzxsaT48YSBjbGFzcz0iY3VycmVudCIgaHJlZj0iJy4kd2VicGFnZS4nL3BhZ2UvJy4kaS4nIj4nLiRpLic8L2E+PC9saT4nOw0KCQkJfQ0KCQkJZWxzZXsNCgkJCQkkcGFnaW5hdGlvbi49ICc8bGk+PGEgaHJlZj0iJy4kd2VicGFnZS4nL3BhZ2UvJy4kaS4nIj4nLiRpLic8L2E+PC9saT4nOw0KCQkJfQ0KCQl9DQoJCQkvL3Byb3ZpZGUgYSBsaW5rIHRvIHRoZSBuZXh0IGJsb2NrIG8gbGlua3MNCgkJDQoJCSRuZXh0X3N0YXJ0ID0gJG1heF9saW5rc19tYXJrZXI7IA0KCQkkbmV4dF9lbmQgPSAkbWF4X2xpbmtzX21hcmtlciskbWF4X2xpbmtzOw0KCQlpZigkbmV4dF9lbmQgPj0kdG90YWxfcGFnZXMpew0KCQkJJG5leHRfZW5kPSR0b3RhbF9wYWdlczsNCgkJfQ0KCQkkbmV4dF9ibG9jayA9ICJQYWdlcyAkbmV4dF9zdGFydCB0byAkbmV4dF9lbmQiOw0KCQlpZigkdG90YWxfcGFnZXM+JG1heF9saW5rc19tYXJrZXItMSl7DQoJCQkkcGFnaW5hdGlvbi49JzxsaSBjbGFzcz0iY3VycmVudCI+PGEgaHJlZj0iJy4kd2VicGFnZS4nL3BhZ2UvJy4kbWF4X2xpbmtzX21hcmtlci4nIj4nLiRuZXh0X2Jsb2NrLic8L2E+PC9saT4nOw0KCQl9DQoJCQ0KCQkgIC8vbGluayB0byBuZXh0IGFuZCBsYXN0IHBhZ2VzDQoJCQ0KCQkNCgkJaWYoKCRwYWdlID49IjEiKSYmKCRwYWdlIT0kdG90YWxfcGFnZXMpKXsNCgkJCSRwYWdpbmF0aW9uLj0nPGxpIGNsYXNzPSJuZXh0Ij48YSBocmVmPSInLiR3ZWJwYWdlLicvcGFnZS8nLigkcGFnZSsxKS4nIj4mcnNhcXVvOzwvYT48L2xpPg0KCQkJCSAgPGxpIGNsYXNzPSJsYXN0Ij48YSBocmVmPSInLiR3ZWJwYWdlLicvcGFnZS8nLiR0b3RhbF9wYWdlcy4nIj4mcmFxdW87PC9hPjwvbGk+JzsNCgkJfQ0KCX0NCgkNCgkvL2lmIG9uZSBwYWdlIG9mIHJlc3VsdHMNCgkNCgllbHNlew0KCSAgJHBhZ2luYXRpb24uPSc8bGk+PGEgaHJlZj0iJy4kd2VicGFnZS4nL3BhZ2UvMSIgY2xhc3M9ImN1cnJlbnQiPjE8L2E+PC9saT4nOw0KCX0NCgkkcGFnaW5hdGlvbiAuPSAnPGxpPjxlbT4oIFRvdGFsJy4kdGl0bGUuJzogJy4kdG90YWwuJyApPC9lbT48L2xpPic7DQoJJHBhZ2luYXRpb24gLj0gJzxsaT48dT48ZW0+UGFnZSAnLiRwYWdlLic8L2VtPjwvdT48L2xpPic7DQoJJHBhZ2luYXRpb24uPSc8L3VsPg0KCQk8ZGl2IGNsYXNzPSJjbGVhciI+PC9kaXY+DQoJCTwvZGl2Pic7DQoJDQoJcmV0dXJuKCRwYWdpbmF0aW9uKTsNCn0NCi8vJGRpc3BsYXlwb3N0cyA9IDEwOw0KJHRvdGFsX3BhZ2VzID0gY2VpbCgkdG90YWwvJGRpc3BsYXlwb3N0cyk7DQokdGl0bGUgPSBpc3NldCgkdGl0bGUpID8gJHRpdGxlOicnOw0KcmV0dXJuIHBhZ2luYXRpb24oJHRvdGFsX3BhZ2VzLCRwYWdlLCR0b3RhbCwkdXJsLCR0aXRsZSk7';
$this->snippetCache['check-username']='Ly8gY2hlY2sgdXNlcm5hbWUNCg0KJHVuYW1lID0gJF9QT1NUWyd1c2VybmFtZSddOw0KaWYoZW1wdHkoJHVuYW1lKSl7ICRhcnIgPSBhcnJheSgnZXJyb3InPT4iWW91IG5lZWQgdG8gZW50ZXIgYSB1c2VybmFtZSIsJ3N1Y2Nlc3MnPT4iIik7IHByaW50X3IoanNvbl9lbmNvZGUoJGFycikpO2V4aXQ7IH0NCmlmKHByZWdfbWF0Y2goJy9bXjAtOUEtWmEtel0vJywkdW5hbWUpKXsNCgkkYXJyID0gYXJyYXkoJ2Vycm9yJz0+IlVzZXJuYW1lIGNhbiBvbmx5IGJlIEFscGhhIE51bWVyaWMgQ2hhcmFjdGVycyEiLCdzdWNjZXNzJz0+IiIpOyBwcmludF9yKGpzb25fZW5jb2RlKCRhcnIpKTtleGl0Ow0KfQ0KaWYoc3RybGVuKCR1bmFtZSk+MTQgfHwgc3RybGVuKCR1bmFtZSk8Nil7DQoJJGFyciA9IGFycmF5KCdlcnJvcic9PiJVc2VybmFtZSBtdXN0IGJlIDYtMTQgY2hhcmFjdGVycyEiLCdzdWNjZXNzJz0+IiIpOyBwcmludF9yKGpzb25fZW5jb2RlKCRhcnIpKTtleGl0Ow0KfQ0KDQokcmVzdWx0ID0gJGV0b21pdGUtPmdldEludFRhYmxlUm93cygkZmllbGRzPSJpZCIsJGZyb209IndlYl91c2VycyIsJHdoZXJlPSJ1c2VybmFtZT0nIi4kdW5hbWUuIiciKTsNCmlmKGNvdW50KCRyZXN1bHQpPjApew0KCSRhcnIgPSBhcnJheSgnZXJyb3InPT4iVGhhdCBVc2VybmFtZSBpcyBub3QgYXZhaWxhYmxlISIsJ3N1Y2Nlc3MnPT4iIik7IA0KCXByaW50X3IoanNvbl9lbmNvZGUoJGFycikpOw0KCWV4aXQ7DQp9ZWxzZXsNCgkkYXJyID0gYXJyYXkoJ2Vycm9yJz0+IiIsJ3N1Y2Nlc3MnPT4iVXNlcm5hbWUgQXZhaWxhYmxlISIpOyANCglwcmludF9yKGpzb25fZW5jb2RlKCRhcnIpKTsNCglleGl0Ow0KfQ==';
$this->snippetCache['register_member']='';
$this->snippetCache['member_login']='LyogTWVtYmVyIGxvZ2luICovDQoNCi8vIGV4YW1wbGUgb2YgdmFyaWFibGVzDQoNCiRyZXEgPSAkZXRvbWl0ZS0+X3JlcXVlc3Q7DQppZihlbXB0eSgkcmVxKSl7DQoJJHJlcSA9ICRfUE9TVDsNCn0NCg0KJHJlZGlyZWN0VXJsID0gKGlzc2V0KCRyZXFbJ3JlZFVybCddKSAmJiAhZW1wdHkoJHJlcVsncmVkVXJsJ10pKSA/IGJhc2U2NF9kZWNvZGUoJHJlcVsncmVkVXJsJ10pOiRldG9taXRlLT5tYWtlVXJsKCRldG9taXRlLT5jb25maWdbJ3NpdGVfc3RhcnQnXSwnJyxhcnJheSgpKTsgLy8gZGVmYXVsdCBtZW1iZXIgYXJlYQ0KDQokcmVnaXN0ZXJVcmwgPSAkZXRvbWl0ZS0+bWFrZVVybCg0MywnJyxhcnJheSgpKTsNCiRmb3JtQWN0aW9uID0gJGV0b21pdGUtPm1ha2VVcmwoJGV0b21pdGUtPmRvY3VtZW50SWRlbnRpZmllciwnJyxhcnJheSgncmVkVXJsJz0+JHJlcVsncmVkVXJsJ10pKTsNCiR1c2VfY2FwdGNoYSA9IDA7IC8vIHVzZSBjYXB0Y2hhIGNvZGUgZm9yIGhlbHAgd2l0aCBzcGFtDQokdXNlciA9ICRldG9taXRlLT53ZWJVc2VyTG9nZ2VkSW4oKTsgLy8gZ3JhYiBjdXJyZW50IGxvZ2dlZCBpbiBtZW1iZXINCiRvdXRwdXQgPSAnJzsNCiRlcnJvciA9ICcnOw0KDQppZigkdXNlciAmJiBpc3NldCgkcmVxWydsb2dvdXQnXSkgJiYgJHJlcVsnbG9nb3V0J109PTEpew0KCSRldG9taXRlLT53ZWJVc2VyTG9nb3V0KCcnLCRldG9taXRlLT5kb2N1bWVudElkZW50aWZpZXIsJycpOw0KfQ0KDQppZihpc3NldCgkX1NFU1NJT05bJ3ZhbGlkYXRlZCddKSAmJiAkdXNlcil7IC8vIHJlZGlyZWN0IG1lbWJlciB0byB0aGUgbWVtYmVyIGFyZWEgb3IgdG8gdGhlIHJlZGlyZWN0IHVybA0KCSRldG9taXRlLT5zZW5kUmVkaXJlY3QoJHJlZGlyZWN0VXJsKTsNCn0NCg0KLy8gY3JlYXRlIHRoZSBmb3JtDQppZighaXNzZXQoJF9QT1NUWydzdWJtaXQnXSkpew0KCS8vIHNob3cgZm9ybQ0KCSRvdXRwdXQgLj0gIjxmaWVsZHNldCBjbGFzcz0nbG9naW4tZmllbGQnPiI7DQoJJG91dHB1dCAuPSAiPGZvcm0gbWV0aG9kPSdwb3N0JyBuYW1lPSdsb2dpbicgYWN0aW9uPSciLiRmb3JtQWN0aW9uLiInPiI7DQoJJG91dHB1dCAuPSAiPHRhYmxlIHdpZHRoPSc5MCUnIGNlbGxwYWRkaW5nPSc1JyBib3JkZXI9JzAnIGNsYXNzPSdsb2dpbi10YWJsZSc+IjsNCgkkb3V0cHV0IC49ICI8dHI+DQoJCTx0ZCB2YWxpZ249J3RvcCc+PHN0cm9uZz5Vc2VybmFtZTo8L3N0cm9uZz48L3RkPjx0ZD48aW5wdXQgdHlwZT0ndGV4dCcgbmFtZT0ndXNlcm5hbWUnIHZhbHVlPScnIC8+PC90ZD4NCgkJPC90cj4NCgkJPHRyPg0KCQk8dGQgdmFsaWduPSd0b3AnPjxzdHJvbmc+UGFzc3dvcmQ6PC9zdHJvbmc+PC90ZD48dGQ+PGlucHV0IHR5cGU9J3Bhc3N3b3JkJyBuYW1lPSdwYXNzd29yZCcgdmFsdWU9JycgLz48L3RkPg0KCQk8L3RyPiI7DQoJaWYoJHVzZV9jYXB0Y2hhPT0xKXsNCgkJJG91dHB1dCAuPSAiPHRyPjx0ZCB2YWxpZ249J3RvcCc+PHN0cm9uZz5JbWFnZSBUZXh0Ojwvc3Ryb25nPjwvdGQ+PHRkPjxpbnB1dCB0eXBlPSd0ZXh0JyBuYW1lPSdjYXB0Y2hhJyB2YWx1ZT0nJyAvPjxwIGNsYXNzPSdjYXB0Y2hhJz4iLiRldG9taXRlLT5nZXRDYXB0Y2hhQ29kZSgpLiI8L3A+PC90ZD48L3RyPiI7DQoJfQ0KCSRvdXRwdXQgLj0gIjx0cj48dGQgY29sc3Bhbj0nMic+PGlucHV0IGNsYXNzPSdzdWJtaXQnIHR5cGU9J3N1Ym1pdCcgbmFtZT0nc3VibWl0JyB2YWx1ZT0nTG9naW4nIC8+PC90ZD48L3RyPiI7DQoJJG91dHB1dCAuPSAiPC90YWJsZT48L2Zvcm0+PC9maWVsZHNldD4iOw0KCQ0KfWVsc2V7DQoJLy8gYXR0ZW1wdCB0byBsb2dpbg0KCSRldG9taXRlLT53ZWJVc2VyTG9naW4oJHVzZXJuYW1lPSRfUE9TVFsndXNlcm5hbWUnXSwkcGFzc3dvcmQ9JF9QT1NUWydwYXNzd29yZCddLDAsJHJlZGlyZWN0VXJsLCcnLCcnLCR1c2VfY2FwdGNoYSwkX1BPU1RbJ2NhcHRjaGEnXSk7DQp9DQoNCnJldHVybiAkb3V0cHV0Ow==';
$this->snippetCache['chain_db']='Ly8gdGVzdCBhIGNoYWluIGRiDQoNCiRkYiA9IG5ldyBFeHREQigkZXRvbWl0ZSk7DQoNCiRwYWNrYWdlcyA9ICRkYi0+c2VsZWN0KGFycmF5KCdsaXN0aW5ncyc9PidsJykpDQoJLT5sZWZ0Sm9pbihhcnJheSgnbGlzdGluZ3NfcGFja2FnZSc9PidscCcpLCdsLnBhY2thZ2VfaWQ9bHAuaWQnLGFycmF5KCdpZCBhcyBwX2lkJywnbmFtZSBhcyBwX25hbWUnKSkNCgktPmxlZnRKb2luKGFycmF5KCd3ZWJfdXNlcnMnPT4ndScpLCdsLnVzZXJfaWQ9dS5pZCcsYXJyYXkoJ2lkIGFzIHVfaWQnLCd1c2VybmFtZScsJ2ZpcnN0TmFtZScsJ2xhc3ROYW1lJykpDQoJLT53aGVyZSgibC5hY3RpdmU9MSIpDQoJLT53aGVyZSgibC5wYWlkPTEiKS0+Y3JlYXRlKCk7DQoJDQoNCg0KCS8vLT5mZXRjaEFsbCgpOw0KLy9wcmludF9yKCRwYWNrYWdlcyk7DQokbGlzdGluZ3MgPSAkcGFja2FnZXMtPmZldGNoQWxsKCk7DQovL3ByaW50X3IoJGxpc3RpbmdzKTsNCmZvcmVhY2goJGxpc3RpbmdzIGFzICRwKXsNCgkkb3V0cHV0IC49ICI8cD4iLiRwWyd0aXRsZSddLiI8L3A+IjsNCn0NCg0KJG91dHB1dCAuPSAnJGRiID0gbmV3IEV4dERCKCRldG9taXRlKTsNCg0KJHBhY2thZ2VzID0gJGRiLT5zZWxlY3QoYXJyYXkoXCdsaXN0aW5nc1wnPT5cJ2xcJykpDQoJLT5sZWZ0Sm9pbihhcnJheShcJ2xpc3RpbmdzX3BhY2thZ2VcJz0+XCdscFwnKSxcJ2wucGFja2FnZV9pZD1scC5pZFwnLGFycmF5KFwnaWQgYXMgcF9pZFwnLFwnbmFtZSBhcyBwX25hbWVcJykpDQoJLT5sZWZ0Sm9pbihhcnJheShcJ3dlYl91c2Vyc1wnPT5cJ3VcJyksXCdsLnVzZXJfaWQ9dS5pZFwnLGFycmF5KFwnaWQgYXMgdV9pZFwnLFwndXNlcm5hbWVcJyxcJ2ZpcnN0TmFtZVwnLFwnbGFzdE5hbWVcJykpDQoJLT53aGVyZSgibC5hY3RpdmU9MSIpDQoJLT53aGVyZSgibC5wYWlkPTEiKS0+Y3JlYXRlKCk7DQokbGlzdGluZ3MgPSAkcGFja2FnZXMtPmZldGNoQWxsKCk7DQoJJzsNCgkNCnJldHVybiAkb3V0cHV0Ow==';
$this->snippetCache['sitemap']='JHBhcmVudCA9IDA7DQokY2hpbGRyZW4gPSAkZXRvbWl0ZS0+Z2V0QWN0aXZlQ2hpbGRyZW4oJHBhcmVudCwgIm1lbnVpbmRleCIsICJBU0MiLCAiaWQsIGVkaXRlZG9uLCBzZWFyY2hhYmxlLCBwYWdldGl0bGUgLCBhbGlhcyIpOw0KICAgICAgIA0KaWYoJGNoaWxkcmVuKXsNCgkkb3V0cHV0ID0gIjx1bCBjbGFzcz0nc2l0ZW1hcCc+IjsNCglmb3JlYWNoKCRjaGlsZHJlbiBhcyAkYyl7DQoJCWlmKCRjWydpZCddPT0xKXsNCgkJCSRvdXRwdXQgLj0gIjxsaT48YSBocmVmPSciLiRFVE9NSVRFX1BBR0VfQkFTRVsnd3d3J10uIic+Ii4kY1sncGFnZXRpdGxlJ10uIjwvYT48L2xpPiI7DQoJCX1lbHNlaWYoJGNbJ2FsaWFzJ109PSdsaXN0aW5ncycpew0KCQkJJG91dHB1dCAuPSAiPGxpPjxhIGhyZWY9JyIuJGV0b21pdGUtPm1ha2VVcmwoJycsJ2xpc3RpbmdzJyxhcnJheSgpKS4iJz4iLiRjWydwYWdldGl0bGUnXS4iPC9hPiI7DQoJCQkJLy8gb3V0cHV0IHRoZSBjYXRlZ29yaWVzDQoJCQkJJGNhdHNBcnJheSA9ICRldG9taXRlLT5nZXRJbnRUYWJsZVJvd3MoJGZpZWxkcz0iKiIsJGZyb209Imxpc3RpbmdzX2NhdGVnb3J5Iiwkd2hlcmU9InBhcmVudD0xIiwnc29ydF9vcmRlcicsJ0FTQycpOw0KCQkJCWlmKCRjYXRzQXJyYXkpew0KCQkJCSRvdXRwdXQgLj0gIjx1bD4iOw0KCQkJCWZvcmVhY2goJGNhdHNBcnJheSBhcyAkY2F0KXsNCgkJCQkJJG91dHB1dCAuPSAiPGxpPjxhIGhyZWY9JyIuJGV0b21pdGUtPm1ha2VVcmwoJycsJ2xpc3RpbmdzJyxhcnJheSgnY2F0ZWdvcnknPT4kY2F0WydmdXJsJ10pKS4iJz4iLiRjYXRbJ25hbWUnXS4iPC9hPjwvbGk+IjsNCgkJCQl9DQoJCQkJJG91dHB1dCAuPSAiPC91bD4iOw0KCQkJCX0NCgkJCSRvdXRwdXQgLj0gIjwvbGk+IjsNCgkJfWVsc2V7DQoJCQkkb3V0cHV0IC49ICI8bGk+PGEgaHJlZj0nIi4kRVRPTUlURV9QQUdFX0JBU0VbJ3d3dyddLiIvIi4kY1snYWxpYXMnXS4iLyc+Ii4kY1sncGFnZXRpdGxlJ10uIjwvYT48L2xpPiI7DQoJCX0NCgl9DQoJJG91dHB1dCAuPSAiPC91bD4iOw0KfQ0KDQpyZXR1cm4gJG91dHB1dDs=';
$this->snippetCache['831_gallery_manager']='';
$this->snippetCache['831_gallery']='JGRpciA9ICRldG9taXRlLT5jb25maWdbJ2Fic29sdXRlX2Jhc2VfcGF0aCddLiJhc3NldHMvZ2FsbGVyeS8iOw0KJHd3dyA9ICRldG9taXRlLT5jb25maWdbJ3d3d19iYXNlX3BhdGgnXS4iYXNzZXRzL2dhbGxlcnkvIjsNCiRvcmlnID0gIm9yaWdpbmFsLyI7IC8vIG9yaWdpbmFsIGltYWdlIGRpcg0KJHRodW1icyA9ICJ0aHVtYnMvIjsgLy8gdGh1bWJzIGRpciANCiRmdWxsID0gImZ1bGwvIjsgLy8gZnVsbCBzaXplIGltYWdlIGRpcg0KJHNsaWRlcyA9ICJzbGlkZXMvIjsgLy8gc2xpZGVzIGltYWdlcw0KJHNsaWRlX2hlaWdodCA9IDMwMDsgLy8gc2xpZGUgaGVpZ2h0DQoNCiRsb2dpbklkID0gMTM7IC8vIGlkIG9mIHRoZSBsb2dpbiBkb2N1bWVudA0KJG1hbmFnZUlkID0gMTI7IC8vIGlkIG9mIHRoZSBkb2N1bWVudCB0aGF0IHlvdSBwdXQgdGhlIG1hbmFnZXIgc25pcHBldCBpbg0KJGRvY0lkID0gJGV0b21pdGUtPmRvY3VtZW50SWRlbnRpZmllcjsNCg0KJGNvbHVtbnMgPSAzOw0KJG91dHB1dCA9ICcnOw0KDQovLyBjaGVjayBkYiBmb3IgZ2FsbGVyeSBpbWFnZXMNCg0KaWYoJHJlc3VsdCA9ICRldG9taXRlLT5nZXRJbnRUYWJsZVJvd3MoJGZpZWxkcz0iKiIsJGZyb209IjgzMWdhbGxlcnkiLCR3aGVyZT0nZG9jSWQ9Jy4kZG9jSWQsJHNvcnQ9J2dhbF9vcmRlcicsJGRpcj0nQVNDJykpew0KCQ0KCSR6PTE7DQoJJG91dHB1dCAuPSAiPHRhYmxlIHdpZHRoPScxMDAlJyBjZWxscGFkZGluZz0nNScgY2xhc3M9J2dhbGxlcnktdGFibGUnPlxuIjsNCgkJZm9yZWFjaCgkcmVzdWx0IGFzICRpdGVtKXsNCgkJCWlmKCR6PT0xKXsgJG91dHB1dCAuPSAiPHRyPlxuIjsgfQ0KCQkJJG91dHB1dCAuPSAiPHRkIHZhbGlnbj0ndG9wJyBhbGlnbj0nY2VudGVyJz48YSB0aXRsZT0nIi5odG1sZW50aXRpZXMoc3RyaXBzbGFzaGVzKCRpdGVtWyd0aXRsZSddKSxFTlRfUVVPVEVTKS4iPGJyIC8+Ii5odG1sZW50aXRpZXMoc3RyaXBzbGFzaGVzKCRpdGVtWydkZXNjcmlwdGlvbiddKSxFTlRfUVVPVEVTKS4iJyBocmVmPSciLiR3d3cuJGZ1bGwuJGl0ZW1bJ2ZuJ10uIicgcmVsPSdsaWdodGJveFtncm91cF0nPjxpbWcgYWx0PSciLnN0cmlwc2xhc2hlcygkaXRlbVsndGl0bGUnXSkuIicgc3JjPSciLiR3d3cuJHRodW1icy4idGhfIi4kaXRlbVsnZm4nXS4iJyBib3JkZXI9JzAnIC8+PC9hPjxwIHN0eWxlPSd0ZXh0LWFsaWduOmNlbnRlcjsnPiIuc3RyaXBzbGFzaGVzKCRpdGVtWyd0aXRsZSddKS4iPGJyIC8+Ii5zdHJpcHNsYXNoZXMoJGl0ZW1bJ2Rlc2NyaXB0aW9uJ10pLiI8L3A+PC90ZD5cbiI7DQoJCQlpZigkej09JGNvbHVtbnMpeyAkb3V0cHV0IC49ICI8L3RyPlxuIjsgJHo9MDsgfQ0KCQkJJHorKzsNCgkJfQ0KCQ0KCWlmKCR6PjEpew0KCWZvcigkaT0kejskaTw9JGNvbHVtbnM7JGkrKyl7DQoJCSRvdXRwdXQgLj0gIjx0ZD4mbmJzcDs8L3RkPiI7DQoJfQ0KCWlmKCR6PCRjb2x1bW5zKXsgJG91dHB1dCAuPSAiPC90cj5cbiI7IH0NCgl9DQoJDQoJJG91dHB1dCAuPSAiPC90YWJsZT5cbiI7DQoJDQp9ZWxzZXsNCgkkb3V0cHV0IC49ICI8cD5DdXJyZW50bHkgdGhlcmUgYXJlIG5vIGdhbGxlcnkgaW1hZ2VzITwvcD4iOw0KfQ0KaWYoJF9TRVNTSU9OWyd2YWxpZGF0ZWQnXSE9MSAmJiAkX1NFU1NJT05bJ3JvbGUnXSE9MSl7DQoJJG91dHB1dCAuPSAiPHA+Jm5ic3A7PC9wPjxwPiZuYnNwOzwvcD48cCBhbGlnbj0nY2VudGVyJz48YSBocmVmPSciLiRldG9taXRlLT5tYWtlVXJsKCRsb2dpbklkLCcnLGFycmF5KCkpLiInPkxvZ2luIHRvIE1hbmFnZSBHYWxsZXJ5PC9hPjwvcD4iOw0KfWVsc2V7DQoJJG91dHB1dCAuPSAiPHA+Jm5ic3A7PC9wPjxwPiZuYnNwOzwvcD48ZGl2IGFsaWduPSdjZW50ZXInPjxwIHN0eWxlPSdmb250LXNpemU6MTRweDsnPjxhIGhyZWY9JyIuJGV0b21pdGUtPm1ha2VVcmwoJG1hbmFnZUlkLCcnLGFycmF5KCdnYWxJZCc9PiRkb2NJZCkpLiInPk1hbmFnZSBHYWxsZXJ5PC9hPjwvcD4iLic8Zm9ybSBtZXRob2Q9InBvc3QiIGFjdGlvbj0iJy4kZXRvbWl0ZS0+bWFrZVVybCgkbG9naW5JZCwnJyxhcnJheSgpKS4nIj4NCiAgICAgIDxpbnB1dCB0eXBlPSJzdWJtaXQiIHZhbHVlPSJMb2dvdXQiIG5hbWU9ImxvZ291dCI+IFsgYWRtaW4gXQ0KICAgIDwvZm9ybT4nLiI8L2Rpdj4iOw0KfQ0KDQoNCnJldHVybiAkb3V0cHV0Ow0K';
$this->snippetCache['831_gallery_slider']='JHd3dyA9ICRldG9taXRlLT5jb25maWdbJ3d3d19iYXNlX3BhdGgnXS4iYXNzZXRzL2dhbGxlcnkvIjsNCiRzbGlkZXNEaXIgPSAic2xpZGVzLyI7IC8vIHNsaWRlcyBpbWFnZXMgZm9sZGVyDQoNCiR0b3RhbEJveGVzID0gMTsgLy8gc2xpZGUgYm94ZXMgb24gdGhlIGZyb250LiAobWFrZSBzdXJlIHlvdSBhZGp1c3QgeW91ciBjc3MgdG8gaGFuZGxlIHRoaXMpDQokdG90YWxTbGlkZXMgPSA1OyAvLyB0b3RhbCBzbGlkZXMgcGVyIGJveC4NCg0KJHNsaWRlckNodW5rID0gIjgzMV9zbGlkZXIiOw0KDQokb3V0cHV0ID0gJyc7DQokbGltaXQgPSAkdG90YWxCb3hlcyokdG90YWxTbGlkZXM7IC8vIHRvdGFsIHNsaWRlcyB0byBnZXQgZnJvbSB0aGUgZGF0YWJhc2UNCmluaV9zZXQoJ2Rpc3BsYXlfZXJyb3JzJywnT24nKTsNCg0KaWYoJHNsaWRlcyA9ICRldG9taXRlLT5nZXRJbnRUYWJsZVJvd3MoJGZpZWxkcz0iKiIsJGZyb209IjgzMWdhbGxlcnkiLCR3aGVyZT0ic2xpZGU9MSIsJHNvcnQ9IlJBTkQoKSIsJGRpcj0iIiwkbGltaXQpKXsNCgkNCglpZihjb3VudCgkc2xpZGVzKT4wKXsNCgkJLy8gbmVlZCB0byBjaGVjayB0aGUgdG90YWxCb3hlcyBhZ2Fpbg0KCQkkc2xpZGVDb3VudCA9IGNvdW50KCRzbGlkZXMpOw0KCQkkdG90YWxCID0gY2VpbCgkc2xpZGVDb3VudC8kdG90YWxTbGlkZXMpOw0KCQlpZigkdG90YWxCPCR0b3RhbEJveGVzKXsgJHRvdGFsQm94ZXM9JHRvdGFsQjsgfQ0KCQkkYkMgPSAxOyAvLyBib3ggY291bnQNCgkJJHogPSAwOyAvLyBzbGlkZXMgYXJyYXkgcG9pbnRlcg0KCQlmb3IoJGk9MTskaTw9JHRvdGFsQm94ZXM7JGkrKyl7DQoJCQlpZigkYkM9PTEpeyAkYnggPSAnJzsgfWVsc2V7ICRieD0kYkM7IH0gLy8gZm9yIHRoZSBmaXJzdCBzbGlkZSBib3ggd2UgZG9uJ3QgdXNlIGEgY291bnQgZm9yIHRoZSBib3gNCgkJCSRvdXRwdXQgLj0gIjxkaXYgY2xhc3M9J21haW4tc2xpZGUiLiRiQy4iJz4iOyAvLyBjb3VudCBhbHdheXMgZ2V0cyB1c2VkIG9uIHRoZSBtYWluIHNsaWRlIGJveA0KCQkJJHNsaWRlT3V0ID0gJyc7DQoJCQkkc2xpZGVOYXYgPSAnJzsNCgkJCSRzQyA9IDE7IC8vIHNsaWRlIGNvdW50DQoJCQlmb3IoJGI9MDskYjwkdG90YWxTbGlkZXM7JGIrKyl7IC8vIGp1c3QgbG9vcCB0aGUgdG90YWwgc2xpZGVzIGFtb3VudA0KCQkJCWlmKCR6PCRzbGlkZUNvdW50KXsNCgkJCQkkc2xpZGVPdXQgLj0gIjxkaXYgY2xhc3M9J3NsaWRlLXdyYXBwZXInPg0KICAgICAgICAgICAgPGltZyBhbHQ9JyIuJHNsaWRlWyd0aXRsZSddLiInIGJvcmRlcj0nMCcgc3JjPSciLiR3d3cuJHNsaWRlc0Rpci4kc2xpZGVzWyR6XVsnZm4nXS4iJyAvPg0KICAgICAgICA8L2Rpdj4iOw0KICAgICAgICAJCQkkc2xpZGVOYXYgLj0gIjxzcGFuIGNsYXNzPSdqRmxvd0NvbnRyb2wiLiRieC4iJz4iLiRzQy4iPC9zcGFuPiI7DQogICAgICAgIAkJCQ0KICAgICAgICAJCQkkc0MrKzsNCiAgICAgICAgCQkJJHorKzsNCiAgICAgICAgCQkJfS8vIGVuZCBpZiBmb3Igc2xpZGUgY291bnQgdG8gZml4IGVtcHR5IHNsaWRlcw0KCQkJfSAvLyBlbmQgZm9yZWFjaCBmb3Igc2xpZGVzDQoJCQkkb3V0cHV0IC49ICRldG9taXRlLT5wYXJzZUNodW5rKCRzbGlkZXJDaHVuaywgYXJyYXkoJ2JDJz0+JGJ4LCdzbGlkZU91dCc9PiRzbGlkZU91dCwnc2xpZGVOYXYnPT4kc2xpZGVOYXYpKTsNCgkJCSRvdXRwdXQgLj0gIjwvZGl2PiI7DQoJCQkkYkMrKzsNCgkJfSAvLyBlbmQgZm9yIGZvciBib3hlcw0KCQkNCgl9DQoNCn0vLyBlbmQgaWYgZm9yIHNsaWRlcw0KDQoNCg0KcmV0dXJuICRvdXRwdXQ7';
$this->snippetCache['test_snippet']='JHJlcyA9ICcnOwppZih5b3UgPSBtZSkge30KcmV0dXJuIHRydWU7';
$this->snippetCache['HelloWorld']='cmV0dXJuICJIZWxsbyBXb3JsZCI7';
?>